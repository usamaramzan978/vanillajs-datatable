{"version":3,"file":"index.esm.js","sources":["../src/datatable-events.js","../src/selectable.js","../src/keyboard-navigation.js","../src/datatable-theme.js","../src/datatable.js","../src/index.js"],"sourcesContent":["/**\n * DataTable Event Constants\n * @namespace DataTableEvents\n * @description Event names used throughout the DataTable component\n */\nexport const DataTableEvents = {\n    /**\n     * Fired when the data table is initialized\n     * @event DataTable#init\n     */\n    INIT: \"init\",\n\n    /**\n     * Fired when a column sort is applied or changed\n     * @event DataTable#sort\n     */\n    SORT: \"sort\",\n\n    /**\n     * Fired when a filter input is changed\n     * @event DataTable#filter\n     */\n    FILTER: \"filter\",\n\n    /**\n     * Fired when the page number changes (pagination)\n     * @event DataTable#pageChange\n     */\n    PAGE_CHANGE: \"pageChange\",\n\n    /**\n     * Fired when data loading starts\n     * @event DataTable#loading\n     */\n    LOADING: \"loading\",\n\n    /**\n     * Fired when data loading completes successfully\n     * @event DataTable#loaded\n     */\n    LOADED: \"loaded\",\n\n    /**\n     * Fired when an error occurs during data fetching or processing\n     * @event DataTable#error\n     */\n    ERROR: \"error\",\n\n    /**\n     * Fired when a search term is entered or changed\n     * @event DataTable#search\n     */\n    SEARCH: \"search\",\n\n    /**\n     * Fired when the number of items per page is changed\n     * @event DataTable#perPageChange\n     */\n    PER_PAGE_CHANGE: \"perPageChange\",\n\n    /**\n     * Fired when the data table is reset to initial state\n     * @event DataTable#reset\n     */\n    RESET: \"reset\",\n\n    /**\n     * Fired when the table data is explicitly reloaded/refreshed\n     * @event DataTable#reload\n     */\n    RELOAD: \"reload\",\n\n    /**\n     * Fired when table state is restored from saved state\n     * @event DataTable#stateRestored\n     */\n    STATE_RESTORED: \"stateRestored\",\n\n    // Selection-related events\n    /**\n     * Fired when any selection change occurs\n     * @event DataTable#selectionChanged\n     */\n    SELECTION_CHANGED: \"selectionChanged\",\n\n    /**\n     * Fired when a single row is selected\n     * @event DataTable#rowSelected\n     */\n    ROW_SELECTED: \"rowSelected\",\n\n    /**\n     * Fired when a single row is deselected\n     * @event DataTable#rowDeselected\n     */\n    ROW_DESELECTED: \"rowDeselected\",\n\n    /**\n     * Fired when all rows are selected\n     * @event DataTable#allSelected\n     */\n    ALL_SELECTED: \"allSelected\",\n\n    /**\n     * Fired when all rows are deselected\n     * @event DataTable#allDeselected\n     */\n    ALL_DESELECTED: \"allDeselected\",\n\n    ROW_ACTIVATE: \"rowActivate\",\n};\n","import { DataTableEvents } from \"./datatable-events\";\n\nexport class Selectable {\n    /**\n     * @class Selectable\n     * @classdesc Handles row selection functionality for HTML tables\n     *\n     * @param {HTMLElement} tableElement - The table DOM element\n     * @param {Object} options - Configuration options\n     * @param {boolean} [options.selectable=false] - Enable/disable selection\n     * @param {string} [options.selectMode=\"single\"] - Selection mode (\"single\" or \"multiple\")\n     * @param {string} [options.selectionClass=\"selected\"] - CSS class for selected rows\n     * @param {string} [options.selectionBgClass=\"bg-red-100\"] - Background class for selected rows\n     */\n    constructor(tableElement, options = {}) {\n        this.table = tableElement;\n        this.selectable = options.selectable || false;\n        this.selectMode = options.selectMode || \"single\";\n        this.selectedRows = new Set();\n        this.selectionClass = options.selectionClass || \"selected\";\n        this.selectionBgClass = options.selectionBgClass || \"bg-red-100\";\n\n        if (this.selectable) {\n            this._initializeSelection();\n        }\n    }\n\n    // ======================\n    // PRIVATE METHODS\n    // ======================\n\n    /**\n     * Dispatch selection events following DataTable pattern\n     * @private\n     * @param {string} name - Event name without prefix\n     * @param {Object} [detail={}] - Additional event details\n     */\n    _dispatchEvent(name, detail = {}) {\n        if (!this.table) {\n            console.warn(\n                `Cannot dispatch selectable:${name} - table element not found`\n            );\n            return false;\n        }\n\n        const event = new CustomEvent(`selectable:${name}`, {\n            detail: {\n                ...detail,\n                selectedIds: this.getSelectedIds(),\n                tableId: this.table.id,\n                timestamp: new Date().toISOString(),\n                selectionMode: this.selectMode,\n            },\n            bubbles: true,\n            cancelable: true,\n        });\n\n        return this.table.dispatchEvent(event);\n    }\n\n    /**\n     * Dispatch deselection events when needed\n     * @private\n     */\n    _dispatchDeselectedEvents() {\n        if (this.selectedRows.size === 0) {\n            this._dispatchEvent(DataTableEvents.ALL_DESELECTED);\n        }\n        this._dispatchEvent(DataTableEvents.SELECTION_CHANGED);\n    }\n    /**\n     * @private\n     * Initializes selection event listeners\n     */\n    _initializeSelection() {\n        this.table.addEventListener(\"click\", (e) => {\n            const row = e.target.closest(\"tr\");\n            if (!row || !row.dataset.id) return;\n            this._handleRowSelection(row);\n        });\n        this._addSelectionStyles();\n    }\n    /**\n     * @private\n     * Handles row selection logic\n     * @param {HTMLElement} row - The row element\n     */\n    _handleRowSelection(row) {\n        const rowId = row.dataset.id;\n        const isSelected = row.classList.contains(this.selectionClass);\n\n        if (this.selectMode === \"single\") {\n            this._clearAllSelections();\n        }\n\n        if (isSelected) {\n            this._deselectRow(row);\n        } else {\n            this._selectRow(row);\n        }\n    }\n    /**\n     * @private\n     * Selects a single row\n     * @param {HTMLElement} row - The row element\n     */\n    _selectRow(row) {\n        const rowId = row.dataset.id;\n        const zebraClass = row.dataset.zebra;\n\n        // Remove zebra striping classes if they exist\n        if (zebraClass) {\n            row.classList.remove(zebraClass);\n        }\n\n        row.classList.add(this.selectionClass, this.selectionBgClass);\n        this.selectedRows.add(rowId);\n    }\n\n    /**\n     * @private\n     * Deselects a single row\n     * @param {HTMLElement} row - The row element\n     */\n    _deselectRow(row) {\n        const rowId = row.dataset.id;\n        const zebraClass = row.dataset.zebra;\n\n        row.classList.remove(this.selectionClass, this.selectionBgClass);\n\n        // Restore zebra striping if it exists\n        if (zebraClass) {\n            row.classList.add(zebraClass);\n        }\n\n        this.selectedRows.delete(rowId);\n    }\n    /**\n     * @private\n     * Clears all selections\n     */\n    _clearAllSelections() {\n        this.table\n            .querySelectorAll(`tr.${this.selectionClass}`)\n            .forEach((row) => {\n                this._deselectRow(row);\n            });\n    }\n    /**\n     * @private\n     * Adds required CSS styles for selection\n     */\n    _addSelectionStyles() {\n        if (!document.getElementById(\"selectable-table-styles\")) {\n            const style = document.createElement(\"style\");\n            style.id = \"selectable-table-styles\";\n            style.textContent = `\n                tr.${this.selectionClass} {\n                    cursor: pointer;\n                    transition: background-color 0.2s ease;\n                }\n            `;\n            document.head.appendChild(style);\n        }\n    }\n\n    // ======================\n    // PUBLIC API METHODS\n    // ======================\n    /**\n     * Gets array of currently selected row IDs\n     * @method getSelectedIds\n     * @memberof Selectable\n     * @instance\n     * @returns {Array<string>} Array of selected row IDs\n     * @example\n     * const selectedIds = table.getSelectedIds();\n     * console.log('Selected rows:', selectedIds);\n     */\n    getSelectedIds() {\n        return Array.from(this.selectedRows);\n    }\n\n    /**\n     * Clears all current selections\n     * @method clearSelection\n     * @memberof Selectable\n     * @instance\n     * @example\n     * table.clearSelection();\n     */\n    clearSelection() {\n        const previouslySelected = this.getSelectedIds();\n        this._clearAllSelections();\n        this._dispatchEvent(DataTableEvents.ALL_DESELECTED, {\n            previouslySelected,\n            count: previouslySelected.length,\n        });\n    }\n\n    /**\n     * Selects all rows in the table (only works in \"multiple\" mode)\n     * @method selectAll\n     * @memberof Selectable\n     * @instance\n     * @example\n     * // Only works when selectMode = \"multiple\"\n     * table.selectAll();\n     */\n    selectAll() {\n        if (this.selectMode === \"single\") return;\n\n        const allRows = this.table.querySelectorAll(\"tr[data-id]\");\n        allRows.forEach((row) => {\n            this._selectRow(row);\n        });\n        this._dispatchEvent(DataTableEvents.ALL_SELECTED, {\n            count: allRows.length,\n        });\n    }\n\n    /**\n     * Toggles selection state of a specific row\n     * @method toggleRowSelection\n     * @memberof Selectable\n     * @instance\n     * @param {string} rowId - The ID of the row to toggle\n     * @param {boolean} [force] - Optional: force select (true) or deselect (false)\n     * @returns {boolean} New selection state (true = selected, false = deselected)\n     * @example\n     * // Toggle row with ID \"row-123\"\n     * table.toggleRowSelection(\"row-123\");\n     *\n     * // Force select row\n     * table.toggleRowSelection(\"row-123\", true);\n     *\n     * // Force deselect row\n     * table.toggleRowSelection(\"row-123\", false);\n     */\n\n    // toggleRowSelection(rowId, force) {\n    //     const row = this.table.querySelector(`tr[data-id=\"${rowId}\"]`);\n    //     if (!row) return false;\n\n    //     const wasSelected = this.isSelected(rowId);\n    //     let newSelected;\n\n    //     // Determine new selection state\n    //     if (force === undefined) {\n    //         newSelected = !wasSelected;\n    //     } else {\n    //         newSelected = force;\n    //     }\n\n    //     // Handle single selection mode\n    //     if (this.selectMode === \"single\" && newSelected) {\n    //         this.clearSelection();\n    //     }\n\n    //     // Update selection state\n    //     if (newSelected) {\n    //         this.selectedRows.add(rowId);\n    //         this._dispatchEvent(DataTableEvents.ROW_SELECTED, {\n    //             rowId,\n    //             action: \"selected\",\n    //             previousState: wasSelected,\n    //         });\n    //     } else if (wasSelected) {\n    //         this.selectedRows.delete(rowId);\n    //         this._dispatchEvent(DataTableEvents.ROW_DESELECTED, {\n    //             rowId,\n    //             action: \"deselected\",\n    //             previousState: wasSelected,\n    //         });\n    //     }\n\n    //     // Update UI and dispatch general change event\n    //     this._dispatchEvent(DataTableEvents.SELECTION_CHANGED, {\n    //         changedRowId: rowId,\n    //         changeType: newSelected ? \"selection\" : \"deselection\",\n    //     });\n\n    //     return newSelected;\n    // }\n    // In your Selectable class, update the toggleRowSelection method:\n    // In Selectable class\n    toggleRowSelection(rowId, force) {\n        const row = this.table.querySelector(`tr[data-id=\"${rowId}\"]`);\n        if (!row) return false;\n\n        const wasSelected = this.isSelected(rowId);\n        let newSelected = force !== undefined ? force : !wasSelected;\n\n        // Skip if no change needed\n        if (newSelected === wasSelected) return newSelected;\n\n        // Always update visual state first\n        this._updateRowVisualState(row, newSelected);\n\n        // Then update selection set\n        if (newSelected) {\n            this.selectedRows.add(rowId);\n        } else {\n            this.selectedRows.delete(rowId);\n        }\n\n        return newSelected;\n    }\n\n    /**\n     * @private\n     * Ensures visual state matches selection state\n     */\n    _updateRowVisualState(row, shouldBeSelected) {\n        if (shouldBeSelected) {\n            // Add selection classes\n            row.classList.add(this.selectionClass, this.selectionBgClass);\n            // Remove zebra striping if exists\n            if (row.dataset.zebra) {\n                row.classList.remove(row.dataset.zebra);\n            }\n        } else {\n            // Remove selection classes\n            row.classList.remove(this.selectionClass, this.selectionBgClass);\n            // Restore zebra striping if exists\n            if (row.dataset.zebra) {\n                row.classList.add(row.dataset.zebra);\n            }\n        }\n    }\n    /**\n     * Checks if a specific row is currently selected\n     * @method isSelected\n     * @memberof Selectable\n     * @instance\n     * @param {string} rowId - The ID of the row to check\n     * @returns {boolean} True if row is selected, false otherwise\n     * @example\n     * if (table.isSelected(\"row-123\")) {\n     *     console.log(\"Row is selected\");\n     * }\n     */\n    isSelected(rowId) {\n        return this.selectedRows.has(rowId);\n    }\n\n    /**\n     * Registers a callback for selection change events\n     * @method onSelectionChange\n     * @memberof Selectable\n     * @instance\n     * @param {function(Array<string>):void} callback - Function to call when selection changes\n     * @example\n     * table.onSelectionChange((selectedIds) => {\n     *     console.log(\"New selection:\", selectedIds);\n     *     document.getElementById(\"count\").textContent = selectedIds.length;\n     * });\n     */\n    onSelectionChange(callback) {\n        this.table.addEventListener(\"click\", (e) => {\n            const row = e.target.closest(\"tr\");\n            if (row && row.dataset.id) {\n                // Dispatch general selection change event\n                callback(this.getSelectedIds());\n            }\n        });\n    }\n}\n","import { DataTableEvents } from \"./datatable-events\";\n\nexport class KeyboardNavigation {\n    /**\n     * @class KeyboardNavigation\n     * @classdesc Handles keyboard navigation for DataTable\n     *\n     * @param {HTMLElement} tableElement - The table DOM element\n     * @param {Object} options - Configuration options\n     * @param {Selectable} options.selectable - The Selectable instance\n     * @param {Function} options.getData - Function to get current table data\n     * @param {boolean} [options.enabled=true] - Enable/disable keyboard nav\n     */\n    constructor(tableElement, { selectable, getData, enabled = true }) {\n        this.table = tableElement;\n        this.selectable = selectable;\n        this.getData = getData;\n        this.enabled = enabled;\n        this.lastSelectedRow = null;\n\n        if (this.enabled) {\n            this.init();\n        }\n    }\n\n    /**\n     * Initialize keyboard navigation\n     */\n    init() {\n        document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n        return this;\n    }\n\n    /**\n     * Destroy keyboard navigation\n     */\n    destroy() {\n        document.removeEventListener(\"keydown\", this.handleKeyDown);\n        this.lastSelectedRow = null;\n    }\n\n    /**\n     * Handle keyboard events\n     * @param {KeyboardEvent}\n     */\n    handleKeyDown(e) {\n        if (!this.enabled) return;\n        if (this._shouldIgnoreKeyEvent(e)) return;\n        console.log(\"Key:\", e.key, \"Ctrl:\", e.ctrlKey, \"Shift:\", e.shiftKey);\n        switch (e.key) {\n            case \"ArrowUp\":\n                e.preventDefault();\n                this.navigateRow(-1);\n                break;\n\n            case \"ArrowDown\":\n                e.preventDefault();\n                this.navigateRow(1);\n                break;\n\n            case \"Enter\":\n                e.preventDefault();\n                this.openSelectedRow();\n                break;\n\n            case \"Escape\":\n                e.preventDefault();\n                this.selectable.clearSelection();\n                break;\n\n            case \"a\":\n                if (e.key && this.selectable.selectMode === \"multiple\") {\n                    e.preventDefault();\n                    this.selectable.selectAll();\n                    // console.log(\"selectMode:\", this.selectable.selectMode); // should be \"multiple\"\n                }\n                break;\n            case \"/\":\n            case \"f\":\n                if (\n                    e.key === \"/\" ||\n                    (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"f\") //ctrl + shift + f\n                ) {\n                    e.preventDefault();\n                    e.stopPropagation(); // Prevent browser from handling it\n                    this._focusSearchInput();\n                }\n                break;\n        }\n    }\n\n    /**\n     * Reload table data\n     */\n    reloadData() {\n        this.table.dispatchEvent(\n            new CustomEvent(\"datatable:reload\", {\n                bubbles: true,\n            })\n        );\n        console.log(\"Reloading table data...\");\n    }\n    /**\n     * Focus the search input field\n     * @private\n     */\n    _focusSearchInput() {\n        // Try multiple ways to find the search input\n        const searchInput =\n            document.getElementById(`${this.table.id}-search-input`) ||\n            this.table.querySelector(\".datatable-search-input\") ||\n            document.querySelector(\"input[data-datatable-search]\");\n\n        if (searchInput) {\n            searchInput.focus();\n            searchInput.select();\n            return true;\n        }\n\n        console.warn(\"Search input not found for table:\", this.table.id);\n        return false;\n    }\n    /**\n     * Navigate between rows\n     * @param {number} direction - 1 for down, -1 for up\n     */\n    navigateRow(direction) {\n        console.log(\n            \"Available rows:\",\n            this._getVisibleRows().map((r) => r.dataset.id)\n        );\n\n        const rows = this._getVisibleRows();\n        if (rows.length === 0) return;\n\n        const currentIndex = this._getCurrentRowIndex(rows);\n        const newIndex = Math.max(\n            0,\n            Math.min(currentIndex + direction, rows.length - 1)\n        );\n\n        // Only proceed if we're actually moving to a different row\n        if (currentIndex !== newIndex) {\n            // Clear previous selection in single select mode\n            if (\n                this.selectable.selectMode === \"single\" &&\n                this.lastSelectedRow\n            ) {\n                this.selectable.toggleRowSelection(\n                    this.lastSelectedRow.dataset.id,\n                    false\n                );\n            }\n\n            // Select new row\n            this._selectRow(rows[newIndex]);\n        }\n    }\n\n    _selectRow(row) {\n        this.selectable.toggleRowSelection(row.dataset.id, true);\n        this.lastSelectedRow = row;\n        this._scrollRowIntoView(row);\n        console.log(\"Selecting row with ID:\", row.dataset.id);\n\n        // Dispatch selection event\n        this.table.dispatchEvent(\n            new CustomEvent(`datatable:${DataTableEvents.ROW_ACTIVATE}`, {\n                detail: {\n                    rowId: row.dataset.id,\n                    rowData: this.getData().find(\n                        (item) => item.id === row.dataset.id\n                    ),\n                    timestamp: new Date().toISOString(),\n                },\n                bubbles: true,\n            })\n        );\n    }\n\n    /**\n     * Open the currently selected row\n     */\n    openSelectedRow() {\n        const selectedIds = this.selectable.getSelectedIds();\n        if (selectedIds.length === 0) return;\n\n        this.table.dispatchEvent(\n            new CustomEvent(`datatable:${DataTableEvents.ROW_ACTIVATE}`, {\n                detail: {\n                    rowId: selectedIds[0],\n                    rowData: this.getData().find(\n                        (item) => item.id === selectedIds[0]\n                    ),\n                    timestamp: new Date().toISOString(),\n                },\n                bubbles: true,\n            })\n        );\n    }\n\n    // ======================\n    // PRIVATE METHODS\n    // ======================\n\n    _shouldIgnoreKeyEvent(e) {\n        return (\n            [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(\n                document.activeElement.tagName\n            ) ||\n            e.ctrlKey ||\n            e.altKey ||\n            e.metaKey\n        );\n    }\n\n    _getVisibleRows() {\n        return Array.from(this.table.querySelectorAll(\"tbody tr[data-id]\"));\n    }\n\n    _getCurrentRowIndex(rows) {\n        if (this.lastSelectedRow) {\n            return rows.indexOf(this.lastSelectedRow);\n        }\n\n        const selectedIds = this.selectable.getSelectedIds();\n        if (selectedIds.length > 0) {\n            this.lastSelectedRow = this.table.querySelector(\n                `tr[data-id=\"${selectedIds[0]}\"]`\n            );\n            return rows.indexOf(this.lastSelectedRow);\n        }\n\n        return -1;\n    }\n\n    // _selectRow(row) {\n    //     this.selectable.toggleRowSelection(row.dataset.id, true);\n    //     this.lastSelectedRow = row;\n    //     this._scrollRowIntoView(row);\n    // }\n\n    _scrollRowIntoView(row) {\n        row.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n            inline: \"nearest\",\n        });\n    }\n}\n","// datatable/datatable-theme.js\n\n/**\n * DEFAULT_THEME\n *\n * This object defines the Tailwind CSS classes used for styling various parts of the DataTable.\n * You can override this theme by passing a custom `theme` object when initializing the DataTable.\n *\n * Theme Keys:\n * ------------------------------------------------------------------------------\n * table                → Applied to the entire <table> element.\n * header               → Applied to the <thead> wrapper.\n * headerCell           → Applied to each <th> cell in the header.\n * body                 → Applied to the <tbody> wrapper.\n * row                  → Applied to each <tr> in the body (rows).\n * cell                 → Applied to each <td> cell in the body.\n * highlight            → Applied to matched text when highlighting search terms.\n *\n * Pagination Styles:\n * ------------------------------------------------------------------------------\n * paginationContainer  → Wrapper for pagination section (info + controls).\n * paginationInfo       → Text showing \"Showing X to Y of Z entries\".\n * paginationWrapper    → Wrapper for pagination buttons.\n * paginationButton     → Style for each pagination button.\n * paginationButtonActive → Style for the active page button.\n * paginationButtonDisabled → Style for disabled buttons (e.g. Previous on first page).\n * paginationEllipsis   → Style for ellipsis (\"...\") in pagination.\n */\n\nexport const DEFAULT_THEME = {\n    controlsWrapper: \"flex flex-wrap items-center justify-between gap-4 p-4\",\n    controlsContainer: \"border-base-300 border-b border-dashed\",\n    perPageSelect: \"select select-sm select-bordered\",\n    searchInput: \"input input-bordered w-full pl-10\",\n    button: \"btn btn-sm btn-outline\",\n\n    // Table structure\n    table: \"table w-full border border-base-200 rounded-xl overflow-hidden shadow-sm\",\n    header: \"bg-base-200 text-base-content\",\n    headerCell: \"px-4 py-3 text-sm font-semibold tracking-wide text-left\",\n    headerSticky: \"sticky top-0 z-10 bg-base-100 shadow-md\",\n\n    // Group headers\n    groupHeaderRow:\n        \"column-group-headers bg-base-300 text-base-content font-semibold text-center\",\n    groupHeaderCell: \"\", // add any custom group header cell classes if needed\n\n    // Filter row & inputs\n    filterRow: \"bg-base-200\",\n    filterInput: \"input input-sm input-bordered w-full\",\n\n    // Body and rows\n    body: \"bg-base-100 divide-y divide-base-200\",\n    row: \"hover:bg-base-200 transition-colors duration-200\",\n    cell: \"px-4 py-3 text-sm text-base-content\",\n\n    // Highlighting search results\n    highlight: \"bg-yellow-200 text-black font-semibold rounded-sm px-1\",\n\n    // Pagination layout\n    paginationContainer:\n        \"flex justify-between items-center px-4 py-2 border-t border-gray-300 bg-base-200 text-base-content rounded-b-lg\",\n    paginationInfo: \"text-sm text-gray-600\",\n    paginationWrapper: \"join gap-1 mt-2\",\n    paginationButton: \"btn btn-sm\",\n    paginationButtonActive: \"btn-primary\",\n    paginationButtonDisabled: \"opacity-50 cursor-not-allowed\",\n    paginationEllipsis: \"px-2 text-gray-500\",\n};\n","import jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { Selectable } from \"./selectable\";\nimport { DataTableEvents } from \"./datatable-events\";\nimport { KeyboardNavigation } from \"./keyboard-navigation\";\nimport { DEFAULT_THEME } from \"./datatable-theme\";\n\nexport default class DataTable {\n    constructor({\n        data,\n        tableId,\n        url,\n        perPage = 10,\n        perPageOptions = [10, 25, 50],\n        defaultSort = \"id\",\n        defaultOrder = \"asc\", // Order direction must be \"asc\" or \"desc\".\n        columns = [], // Add default empty array here\n        dataSrc = null,\n        saveState = false,\n\n        selectable = false,\n        selectMode = \"single\",\n        selectionClass = \"selected\",\n        selectionBgClass = \"bg-red-100\",\n\n        keyboardNav = false,\n        // Element IDs\n        searchInputId = null,\n        prevBtnId = null,\n        nextBtnId = null,\n        pageInfoId = null,\n        infoTextId = null,\n        paginationWrapperId = null,\n        perPageSelectId = null,\n\n        // Features\n        paginationType = \"detailed\",\n        enableSort = true,\n        sortableColumns = [],\n        searchDelay = 300, // new\n\n        loadingSpinnerId = null, // Default loading spinner ID\n        loadingSpinner = true, // Whether to show the loading spinner by default\n\n        // Button IDs and visibility flags\n        resetBtnId = null,\n        reloadBtnId = null,\n        exportBtnId = null,\n        downloadCsvBtnId = null,\n        printBtnId = null,\n        pdfBtnId = null,\n\n        resetBtn = true,\n        reloadBtn = true,\n        printBtn = true,\n        exportBtn = true,\n        downloadCsvBtn = true,\n        pdfBtn = true,\n        perPageBtn = true,\n        searchBtn = true,\n        paginationBtn = true,\n\n        columnFilterFields = null, // Array of column names to filter (for default inputs)\n        theme = {}, // default to empty object\n        columnGroups = [], // Add default empty array here\n        stickyHeader = false,\n    }) {\n        // this.table = document.getElementById(tableId);\n        // this.theme = DEFAULT_THEME || {};\n        // Merge default theme with user overrides\n        this.theme = {\n            ...DEFAULT_THEME,\n            ...theme,\n        };\n\n        this.data = [];\n        this.tableId = tableId;\n        this.table = document.getElementById(tableId);\n        this.url = url;\n        this.rowsPerPage = perPage;\n        this.perPageOptions = perPageOptions; // Store the custom per-page options\n        this.sort = defaultSort;\n        this.order = defaultOrder;\n        this.search = \"\";\n        this.currentPage = 1;\n        this.dataSrc = dataSrc || \"data\"; // Default to 'data' if not provided\n        this.enableSaveState = saveState;\n        this.updatePagination = this.updatePagination.bind(this);\n\n        this.prevBtn = prevBtnId ? document.getElementById(prevBtnId) : null;\n        this.nextBtn = nextBtnId ? document.getElementById(nextBtnId) : null;\n        this.pageInfo = pageInfoId ? document.getElementById(pageInfoId) : null;\n        this.infoText = infoTextId ? document.getElementById(infoTextId) : null;\n        this.paginationWrapper = paginationWrapperId\n            ? document.getElementById(paginationWrapperId)\n            : null;\n\n        this.paginationType = paginationType;\n        this.enableSort = enableSort;\n        this.paginationBtn = paginationBtn;\n        this.sortableColumns = sortableColumns;\n        this.searchDelay = searchDelay;\n        this.columnFilters = {};\n        this.columns = columns;\n        this.searchDebounceTimer = null;\n        this.enableLoadingSpinner = loadingSpinner;\n        this.LoadingSpinnerContainer =\n            loadingSpinnerId || `${tableId}-loading-spinner`;\n\n        // Button configuration\n        this.buttonConfig = {\n            reset: {\n                id: resetBtnId || `${tableId}-reset-button`,\n                enabled: resetBtn,\n                icon: \"fa-solid fa-rotate-left\",\n                text: \"Reset\",\n            },\n            reload: {\n                id: reloadBtnId || `${tableId}-reload-button`,\n                enabled: reloadBtn,\n                icon: \"fa-solid fa-rotate\",\n                text: \"Reload\",\n            },\n            print: {\n                id: printBtnId || `${tableId}-print-button`,\n                enabled: printBtn,\n                icon: \"fa-solid fa-print\",\n                text: \"Print\",\n            },\n            export: {\n                id: exportBtnId || `${tableId}-export-button`,\n                enabled: exportBtn,\n                icon: \"fa-solid fa-file-excel text-green-600\",\n                text: \"Excel\",\n            },\n            downloadCsv: {\n                id: downloadCsvBtnId || `${tableId}-download-csv-button`,\n                enabled: downloadCsvBtn,\n                icon: \"fa-solid fa-file-csv text-blue-600\",\n                text: \"CSV\",\n            },\n            pdf: {\n                id: pdfBtnId || `${tableId}-download-pdf-button`,\n                enabled: pdfBtn,\n                icon: \"fa-solid fa-file-pdf text-red-600\",\n                text: \"PDF\",\n            },\n            perPageSelect: {\n                id: perPageSelectId || `${tableId}-per-page`,\n                enabled: perPageBtn,\n                text: \"Perpage\",\n            },\n            search: {\n                id: searchInputId || `${tableId}-search-input`,\n                enabled: searchBtn,\n                text: \"Search\",\n            },\n        };\n\n        this.paginationConfig = {\n            previous: {\n                id: prevBtnId || `${tableId}-prev-button`,\n                text: \"Previous\",\n            },\n            next: {\n                id: nextBtnId || `${tableId}-next-button`,\n                text: \"Next\",\n            },\n            pageInfo: {\n                id: pageInfoId || `${tableId}-page-info`,\n                text: \"Page Info\",\n            },\n            infoText: {\n                id: infoTextId || `${tableId}-info-text`,\n                text: \"Entries Info\",\n            },\n            wrapper: {\n                id: paginationWrapperId || `${tableId}-pagination`,\n                text: \"Pagination Controls Wrapper\",\n            },\n        };\n\n        this.columnFilterFields = columnFilterFields;\n\n        // Initialize selectable features PROPERLY\n        this.selectable = new Selectable(this.table, {\n            selectable,\n            selectMode,\n            selectionClass,\n            selectionBgClass,\n        });\n        // Proxy the public methods ,Expose Selectable methods\n        this.getSelectedIds = () => this.selectable.getSelectedIds();\n        this.clearSelection = () => this.selectable.clearSelection();\n        this.selectAll = () => this.selectable.selectAll();\n        this.toggleRowSelection = (id, force) =>\n            this.selectable.toggleRowSelection(id, force);\n        this.isSelected = (id) => this.selectable.isSelected(id);\n        this.onSelectionChange = (callback) =>\n            this.selectable.onSelectionChange(callback);\n\n        // this.onRowClick = (callback) => this.selectable.onRowClick(callback);\n\n        // this.onRowDoubleClick = (callback) =>\n        //     this.selectable.onRowDoubleClick(callback);\n\n        // Then initialize keyboard navigation if enabled\n        if (keyboardNav !== false) {\n            // Changed from enableKeyboardNav\n            this.keyboardNav = new KeyboardNavigation(this.table, {\n                selectable: this.selectable,\n                getData: () => this.data,\n                enabled: keyboardNav, // Changed from options.keyboardNav\n            });\n        }\n\n        this.columnGroups = columnGroups || [];\n        this.stickyHeader = stickyHeader;\n\n        this.init();\n    }\n\n    init() {\n        if (this.saveState) {\n            this.loadState(); // Load saved state early before fetchData()\n        }\n        if (this.enableLoadingSpinner) this.toggleLoadingSpinner(true);\n\n        this.addDefaultControls();\n\n        this.initButtons();\n\n        this.initSearch();\n        if (this.enableSort) this.bindSort();\n        this.fetchData();\n\n        this.initPagination();\n\n        if (this.columnFilterFields && Array.isArray(this.columnFilterFields)) {\n            this.renderDefaultColumnSearchInputs();\n        } else if (this.enableCustomColumnFilter) {\n            this.bindColumnSearchInputs(); // Just bind if inputs already exist\n        }\n        this.renderTableHeader();\n        this.dispatchEvent(DataTableEvents.INIT, {\n            config: {\n                url: this.url,\n                columns: this.columns,\n                features: {\n                    sorting: this.enableSort,\n                    pagination: this.paginationBtn,\n                    search: this.search,\n                },\n            },\n        });\n    }\n\n    dispatchEvent(name, detail = {}) {\n        if (!this.table) {\n            console.warn(\n                `Cannot dispatch datatable:${name} - table element not found`\n            );\n            return false;\n        }\n\n        const event = new CustomEvent(`datatable:${name}`, {\n            detail: {\n                ...detail,\n                tableId: this.table.id,\n                timestamp: new Date().toISOString(),\n            },\n            bubbles: true,\n            cancelable: true,\n        });\n\n        // console.log(`Dispatching datatable:${name}`, event.detail); // <--- Debug line\n\n        return this.table.dispatchEvent(event);\n    }\n    /**\n     * State Persistence\n     * Saves the current state of the DataTable to localStorage.\n     * State includes sorting, pagination, filters, and search term.\n     */\n    saveState() {\n        if (!this.table || !this.table.id) return; // Safety check\n\n        const state = {\n            sort: this.sort,\n            order: this.order,\n            page: this.currentPage,\n            perPage: this.rowsPerPage,\n            filters: this.columnFilters,\n            search: this.search,\n        };\n        localStorage.setItem(\n            `datatable_${this.table.id}_state`,\n            JSON.stringify(state)\n        );\n    }\n\n    /**\n     * Loads the saved state from localStorage and applies it to the DataTable.\n     * Dispatches a 'stateRestored' event after loading.\n     */\n    loadState() {\n        if (!this.table || !this.table.id) return; // Safety check\n\n        const saved = localStorage.getItem(`datatable_${this.table.id}_state`);\n        if (saved) {\n            const state = JSON.parse(saved);\n            Object.assign(this, {\n                sort: state.sort,\n                order: state.order,\n                currentPage: state.page,\n                rowsPerPage: state.perPage,\n                columnFilters: state.filters,\n                search: state.search,\n            });\n\n            // Use the event name constant for consistency\n            this.dispatchEvent(DataTableEvents.STATE_RESTORED, { state });\n        }\n    }\n\n    clearState() {\n        if (!this.table || !this.table.id) return;\n        localStorage.removeItem(`datatable_${this.table.id}_state`);\n    }\n\n    // Initialize all buttons\n    initButtons() {\n        // Keep existing binding methods if they're enabled\n        if (this.buttonConfig.reset.enabled) {\n            this.bindResetButton();\n        }\n        if (this.buttonConfig.reload.enabled) {\n            this.bindReloadButton();\n        }\n        if (this.buttonConfig.print.enabled) {\n            this.bindPrintButton();\n        }\n        if (this.buttonConfig.export.enabled) {\n            this.bindExportButton();\n        }\n        if (this.buttonConfig.downloadCsv.enabled) {\n            this.bindDownloadCsvButton();\n        }\n        if (this.buttonConfig.pdf.enabled) {\n            this.bindPdfButton();\n        }\n        if (this.buttonConfig.perPageSelect.enabled) {\n            this.bindPerPageSelect();\n        }\n    }\n\n    initPagination() {\n        if (!this.paginationBtn) return;\n\n        this.paginationConfig = {\n            previous: {\n                id: this.prevBtnId || `${this.tableId}-prev-button`,\n                text: \"Previous\",\n            },\n            next: {\n                id: this.nextBtnId || `${this.tableId}-next-button`,\n                text: \"Next\",\n            },\n            pageInfo: {\n                id: this.pageInfoId || `${this.tableId}-page-info`,\n                text: \"Page Info\",\n            },\n            infoText: {\n                id: this.infoTextId || `${this.tableId}-info-text`,\n                text: \"Showing X to Y of Z entries\",\n            },\n            wrapper: {\n                id: this.paginationWrapperId || `${this.tableId}-pagination`,\n            },\n            container: {\n                id:\n                    this.paginationContainerId ||\n                    `${this.tableId}-pagination-container`,\n            },\n        };\n\n        // Create buttons and info text\n        this.prevBtn = this.getOrCreateElement(\n            this.paginationConfig.previous.id,\n            \"button\",\n            \"btn btn-sm join-item\",\n            this.paginationConfig.previous.text\n        );\n\n        this.nextBtn = this.getOrCreateElement(\n            this.paginationConfig.next.id,\n            \"button\",\n            \"btn btn-sm join-item\",\n            this.paginationConfig.next.text\n        );\n\n        this.pageInfo = this.getOrCreateElement(\n            this.paginationConfig.pageInfo.id,\n            \"span\",\n            \"text-sm text-gray-600\",\n            \"\"\n        );\n\n        this.infoText = this.getOrCreateElement(\n            this.paginationConfig.infoText.id,\n            \"div\",\n            \"text-sm text-gray-600\",\n            \"\"\n        );\n\n        // Create or get paginationWrapper\n        this.paginationWrapper = document.getElementById(\n            this.paginationConfig.wrapper.id\n        );\n        if (!this.paginationWrapper) {\n            this.paginationWrapper = document.createElement(\"div\");\n            this.paginationWrapper.id = this.paginationConfig.wrapper.id;\n            this.paginationWrapper.className = this.theme.paginationWrapper; // container for buttons only\n        }\n\n        // Create or get paginationContainer (outer wrapper)\n        this.paginationContainer = document.getElementById(\n            this.paginationConfig.container.id\n        );\n        if (!this.paginationContainer) {\n            this.paginationContainer = document.createElement(\"div\");\n            this.paginationContainer.id = this.paginationConfig.container.id;\n            this.paginationContainer.className = this.theme.paginationContainer;\n\n            // Append infoText and paginationWrapper inside this container\n            this.paginationContainer.appendChild(this.infoText);\n            this.paginationContainer.appendChild(this.paginationWrapper);\n\n            // Append container after the table\n            this.table.parentNode.appendChild(this.paginationContainer);\n        }\n\n        // Append buttons inside paginationWrapper (if not already)\n        if (!this.paginationWrapper.contains(this.prevBtn))\n            this.paginationWrapper.appendChild(this.prevBtn);\n        if (!this.paginationWrapper.contains(this.nextBtn))\n            this.paginationWrapper.appendChild(this.nextBtn);\n\n        // Bind buttons\n        this.bindPaginationButtons();\n    }\n\n    getOrCreateElement(id, tag, className, text) {\n        let el = document.getElementById(id);\n        if (!el) {\n            el = document.createElement(tag);\n            el.id = id;\n            el.className = className;\n            if (text) el.textContent = text;\n        }\n        return el;\n    }\n\n    // Method to add default controls\n    addDefaultControls() {\n        const controlsContainer = document.createElement(\"div\");\n        controlsContainer.className = this.theme.controlsContainer || \"\";\n\n        let perPageSelectHTML = \"\";\n        let buttonsHTML = \"\";\n        let searchHTML = \"\";\n\n        for (const [key, config] of Object.entries(this.buttonConfig)) {\n            if (!config.enabled || document.getElementById(config.id)) continue;\n\n            if (key === \"perPageSelect\") {\n                // Generate options from perPageOptions array\n                const optionsHTML = this.perPageOptions\n                    .map(\n                        (size) =>\n                            `<option value=\"${size}\" ${\n                                this.rowsPerPage == size ? \"selected\" : \"\"\n                            }>${size}</option>`\n                    )\n                    .join(\"\");\n\n                perPageSelectHTML = `\n                <select id=\"${config.id}\" class=\"${this.theme.perPageSelect}\" title=\"${config.text}\">\n                    ${optionsHTML}\n                </select>\n            `;\n            } else if (key === \"search\") {\n                searchHTML = `\n                <div class=\"relative w-full max-w-xs\">\n                    <input type=\"text\" id=\"${config.id}\" placeholder=\"Search records...\" class=\"${this.theme.searchInput}\" />\n                </div>\n            `;\n            } else {\n                buttonsHTML += `\n                <button id=\"${config.id}\" class=\"${this.theme.button}\" title=\"${\n                    config.text\n                }\">\n                    ${\n                        config.icon ? `<i class=\"${config.icon} mr-1\"></i>` : \"\"\n                    }${config.text}\n                </button>\n            `;\n            }\n        }\n\n        controlsContainer.innerHTML = `\n        <div class=\"${this.theme.controlsWrapper}\">\n            <div class=\"flex items-center gap-2\">\n                ${perPageSelectHTML}\n                <div class=\"flex items-center gap-2\">${buttonsHTML}</div>\n            </div>\n            ${searchHTML}\n        </div>\n    `;\n\n        const tableParent = this.table.parentNode;\n        if (tableParent) {\n            tableParent.insertBefore(controlsContainer, this.table);\n        }\n    }\n\n    // Method to toggle the loading spinner visibility based on the `loadingSpinner` boolean\n    toggleLoadingSpinner(isLoading) {\n        if (this.enableLoadingSpinner) {\n            let spinner = document.getElementById(this.LoadingSpinnerContainer);\n\n            // If spinner does not exist, create default one\n            if (!spinner) {\n                spinner = document.createElement(\"span\");\n                spinner.id = this.LoadingSpinnerContainer;\n                spinner.className = \"loading loading-dots loading-xl hidden\";\n                this.table.parentNode.insertBefore(spinner, this.table); // You can change position\n            }\n\n            // Show or hide\n            spinner.classList.toggle(\"hidden\", !isLoading);\n        }\n    }\n\n    // ==============================\n    // RESET FUNCTIONALITY SECTION\n    // ==============================\n    //\n    // Individual button binding methods that call your existing implementation\n\n    bindResetButton() {\n        const button = document.getElementById(this.buttonConfig.reset.id);\n        if (button) {\n            button.addEventListener(\"click\", () => this.resetTable());\n        }\n    }\n\n    // Reset the table\n    resetTable() {\n        this.search = \"\";\n        this.currentPage = 1;\n        // this.sort = this.defaultSort;\n        // this.order = this.defaultOrder;\n        this.sort = \"id\";\n        this.order = \"asc\";\n        this.columnFilters = {};\n\n        // Reset the search input\n        if (this.searchInput) {\n            this.searchInput.value = \"\";\n        }\n        this.clearState();\n        // console.log(\"Clearing state\");\n        // Reset column filters if they exist\n        const filterInputs = document.querySelectorAll(\"[data-column-filter]\");\n        filterInputs.forEach((input) => {\n            input.value = \"\";\n        });\n\n        this.dispatchEvent(DataTableEvents.RESET);\n\n        this.fetchData();\n    }\n\n    // ==============================\n    // RELOAD FUNCTIONALITY SECTION\n    // ==============================\n    //\n\n    bindReloadButton() {\n        const reloadButton = document.getElementById(\n            this.buttonConfig.reload.id\n        );\n        if (!reloadButton) return;\n\n        reloadButton.addEventListener(\"click\", () => {\n            this.dispatchEvent(DataTableEvents.RELOAD);\n            this.fetchData();\n        });\n    }\n\n    // ==============================\n    // EXPORT FUNCTIONALITY SECTION\n    // ==============================\n\n    bindExportButton() {\n        const button = document.getElementById(this.buttonConfig.export.id);\n        if (button) {\n            button.addEventListener(\"click\", () => this.exportToExcel());\n        }\n    }\n\n    // ==============================\n    // CSV FUNCTIONALITY SECTION\n    // ==============================\n    bindDownloadCsvButton() {\n        const button = document.getElementById(\n            this.buttonConfig.downloadCsv.id\n        );\n        if (button) {\n            button.addEventListener(\"click\", () => this.downloadCSV());\n        }\n    }\n\n    // ==============================\n    // PRINT FUNCTIONALITY SECTION\n    // ==============================\n    bindPrintButton() {\n        const button = document.getElementById(this.buttonConfig.print.id);\n\n        if (button) {\n            button.addEventListener(\"click\", () => this.printTable());\n        }\n    }\n    // ==============================\n    // PDF FUNCTIONALITY SECTION\n    // ==============================\n    bindPdfButton() {\n        const button = document.getElementById(this.buttonConfig.pdf.id);\n        if (button) {\n            button.addEventListener(\"click\", () => this.downloadPdf());\n        }\n    }\n    initSearch() {\n        const searchInput = document.getElementById(\n            this.buttonConfig.search.id\n        );\n\n        if (searchInput) {\n            // If search input exists in the default controls, bind the search behavior to it\n            this.searchInput = searchInput;\n            this.bindSearch();\n        }\n    }\n\n    bindSearch() {\n        if (!this.searchInput) return;\n\n        // Wrap the event handler with debounce\n        const debouncedHandler = this.debounce((e) => {\n            this.search = e.target.value;\n            this.currentPage = 1;\n\n            this.dispatchEvent(DataTableEvents.SEARCH, {\n                searchTerm: this.search,\n                currentPage: this.currentPage,\n                searchDelay: this.searchDelay,\n            });\n\n            if (this.enableSaveState) {\n                this.saveState();\n            }\n            this.fetchData();\n        }, this.searchDelay);\n\n        this.searchInput.addEventListener(\"input\", debouncedHandler);\n    }\n\n    renderDefaultColumnSearchInputs() {\n        const thead = this.table.querySelector(\"thead\");\n        if (!thead) return;\n\n        // Remove existing filter row if any\n        const existingRow = thead.querySelector(\".column-filters\");\n        if (existingRow) existingRow.remove();\n\n        const filterRow = document.createElement(\"tr\");\n        filterRow.className = \"column-filters\";\n\n        // If columns are objects, extract just the name/key for matching\n        const columnNames = this.columns.map((column) => column.name); // Extract column names\n\n        // console.log(\"Column Names:\", columnNames);\n        // console.log(\"Column Filter Fields:\", this.columnFilterFields);\n\n        // Iterate through columns and append input fields if they exist in columnFilterFields\n        columnNames.forEach((columnKey) => {\n            const td = document.createElement(\"th\");\n\n            // If the column is in columnFilterFields, add a search input field\n            if (this.columnFilterFields.includes(columnKey)) {\n                const input = document.createElement(\"input\");\n                input.className =\n                    \"input input-sm input-bordered w-full column-search\";\n                input.placeholder = `Search ${columnKey}`;\n                input.setAttribute(\"data-column\", columnKey);\n                td.appendChild(input);\n            } else {\n                // If the column isn't in columnFilterFields, we add an empty <th>\n                td.innerHTML = \"\"; // This is just to be explicit\n            }\n\n            filterRow.appendChild(td);\n        });\n\n        // Insert the filter row into the thead\n        thead.appendChild(filterRow);\n        // Bind the input event listeners to the search inputs\n        this.bindColumnSearchInputs();\n    }\n\n    bindColumnSearchInputs() {\n        const inputs = document.querySelectorAll(\".column-search\");\n\n        inputs.forEach((input) => {\n            const column = input.dataset.column;\n            input.addEventListener(\"input\", () => {\n                clearTimeout(this.columnSearchTimer);\n                this.columnSearchTimer = setTimeout(() => {\n                    this.columnFilters[column] = input.value;\n                    this.currentPage = 1; // Reset to first page\n\n                    if (this.enableSaveState) {\n                        this.saveState();\n                    }\n                    this.fetchData(); // Fetch filtered data\n                }, this.searchDelay);\n            });\n        });\n    }\n\n    bindSort() {\n        const headers = this.table.querySelectorAll(\"th[data-column]\");\n        headers.forEach((th) => {\n            const column = th.dataset.column;\n            if (!this.sortableColumns.includes(column)) return;\n\n            const iconSpan = document.createElement(\"span\");\n            iconSpan.className = \"sort-icon ml-2\";\n            iconSpan.innerHTML = '<i class=\"fa fa-sort text-gray-400\"></i>';\n            th.appendChild(iconSpan);\n\n            th.addEventListener(\"click\", () => {\n                this.order = th.dataset.order === \"asc\" ? \"desc\" : \"asc\";\n                this.sort = column;\n\n                th.dataset.order = this.order;\n\n                headers.forEach((h) => {\n                    const i = h.querySelector(\".sort-icon i\");\n                    if (i) i.className = \"fa fa-sort text-gray-400\";\n                });\n\n                const icon = th.querySelector(\".sort-icon i\");\n                if (icon)\n                    icon.className =\n                        this.order === \"asc\"\n                            ? \"fa fa-sort-up text-gray-600\"\n                            : \"fa fa-sort-down text-gray-600\";\n\n                this.fetchData();\n            });\n        });\n    }\n\n    bindPaginationButtons() {\n        if (this.prevBtn)\n            this.prevBtn.addEventListener(\"click\", () => {\n                if (this.currentPage > 1) {\n                    this.currentPage--;\n\n                    this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                        fromPage: this.currentPage + 1,\n                        toPage: this.currentPage,\n                    });\n\n                    this.fetchData();\n                }\n            });\n\n        if (this.nextBtn)\n            this.nextBtn.addEventListener(\"click\", () => {\n                this.currentPage++;\n\n                this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                    fromPage: this.currentPage - 1,\n                    toPage: this.currentPage,\n                });\n\n                this.fetchData();\n            });\n    }\n\n    updatePagination({ current_page, last_page, total }) {\n        if (this.pageInfo)\n            this.pageInfo.textContent = `Page ${current_page} of ${last_page}`;\n        if (this.prevBtn) this.prevBtn.disabled = current_page === 1;\n        if (this.nextBtn) this.nextBtn.disabled = current_page === last_page;\n\n        if (!this.paginationWrapper) return;\n        this.paginationWrapper.innerHTML = \"\";\n\n        if (this.paginationType === \"simple\") {\n            this.updateSimplePagination(current_page, last_page);\n        } else {\n            this.updateDetailedPagination(current_page, last_page);\n        }\n\n        if (this.infoText) {\n            this.infoText.textContent = `Showing ${\n                (current_page - 1) * this.rowsPerPage + 1\n            } to ${Math.min(\n                current_page * this.rowsPerPage,\n                total\n            )} of ${total} entries`;\n        }\n        if (this.enableSaveState) {\n            this.saveState();\n        }\n    }\n\n    updateSimplePagination(current_page, last_page) {\n        const prevBtn = this.createNavButton(\"«\", current_page > 1, () => {\n            const prevPage = this.currentPage;\n            this.currentPage = current_page - 1;\n            this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                fromPage: prevPage,\n                toPage: this.currentPage,\n            });\n            this.fetchData();\n        });\n\n        const nextBtn = this.createNavButton(\n            \"»\",\n            current_page < last_page,\n            () => {\n                const prevPage = this.currentPage;\n                this.currentPage = current_page + 1;\n                this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                    fromPage: prevPage,\n                    toPage: this.currentPage,\n                });\n                this.fetchData();\n            }\n        );\n        this.paginationWrapper.className =\n            this.theme.paginationWrapper || \"join gap-1\";\n\n        this.paginationWrapper.appendChild(prevBtn);\n        this.paginationWrapper.appendChild(nextBtn);\n    }\n\n    updateDetailedPagination(current_page, last_page) {\n        const addPage = (page) => {\n            const btn = document.createElement(\"button\");\n            btn.className = `${\n                this.theme.paginationButton || \"btn btn-sm\"\n            } join-item ${\n                page === current_page\n                    ? this.theme.paginationButtonActive || \"btn-active\"\n                    : \"\"\n            }`;\n            btn.textContent = page;\n            btn.addEventListener(\"click\", () => {\n                const prevPage = this.currentPage;\n                this.currentPage = page;\n                this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                    fromPage: prevPage,\n                    toPage: this.currentPage,\n                });\n                this.fetchData();\n            });\n            return btn;\n        };\n\n        const startPage = Math.max(1, current_page - 2);\n        const endPage = Math.min(last_page, current_page + 2);\n\n        this.paginationWrapper.className =\n            this.theme.paginationWrapper || \"join gap-1\";\n\n        this.paginationWrapper.appendChild(\n            this.createNavButton(\"«\", current_page > 1, () => {\n                const prevPage = this.currentPage;\n                this.currentPage--;\n                this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                    fromPage: prevPage,\n                    toPage: this.currentPage,\n                });\n                this.fetchData();\n            })\n        );\n\n        if (startPage > 1) {\n            this.paginationWrapper.appendChild(addPage(1));\n            if (startPage > 2)\n                this.paginationWrapper.appendChild(this.ellipsis());\n        }\n\n        for (let i = startPage; i <= endPage; i++) {\n            this.paginationWrapper.appendChild(addPage(i));\n        }\n\n        if (endPage < last_page) {\n            if (endPage < last_page - 1)\n                this.paginationWrapper.appendChild(this.ellipsis());\n            this.paginationWrapper.appendChild(addPage(last_page));\n        }\n\n        this.paginationWrapper.appendChild(\n            this.createNavButton(\"»\", current_page < last_page, () => {\n                const prevPage = this.currentPage;\n                this.currentPage++;\n                this.dispatchEvent(DataTableEvents.PAGE_CHANGE, {\n                    fromPage: prevPage,\n                    toPage: this.currentPage,\n                });\n                this.fetchData();\n            })\n        );\n    }\n\n    createNavButton(text, enabled, onClick) {\n        const btn = document.createElement(\"button\");\n        btn.className = `${this.theme.paginationButton || \"btn btn-sm\"} ${\n            enabled\n                ? \"\"\n                : this.theme.paginationButtonDisabled ||\n                  \"opacity-50 cursor-not-allowed\"\n        }`;\n        btn.textContent = text;\n        if (!enabled) {\n            btn.disabled = true;\n        } else {\n            btn.addEventListener(\"click\", onClick);\n        }\n        return btn;\n    }\n\n    ellipsis() {\n        const span = document.createElement(\"span\");\n        span.textContent = \"...\";\n        span.className = this.theme.paginationEllipsis || \"px-2\";\n        return span;\n    }\n\n    bindPerPageSelect() {\n        const config = this.buttonConfig.perPageSelect;\n        if (!config || !config.enabled) return;\n\n        const perPageSelect = document.getElementById(config.id);\n        if (!perPageSelect) {\n            console.warn(\n                `Per page select element with id '${config.id}' not found.`\n            );\n            return;\n        }\n\n        perPageSelect.addEventListener(\"change\", (e) => {\n            this.rowsPerPage = parseInt(e.target.value);\n            // console.log(`Rows per page set to: ${e.target.value}`);\n            this.currentPage = 1;\n\n            this.dispatchEvent(DataTableEvents.PER_PAGE_CHANGE, {\n                perPage: this.rowsPerPage,\n                currentPage: this.currentPage,\n            });\n\n            this.fetchData();\n        });\n    }\n\n    async fetchData() {\n        // Show loading spinner before fetching data\n        if (this.enableLoadingSpinner) {\n            this.toggleLoadingSpinner(true);\n        }\n        const params = new URLSearchParams({\n            search: this.search,\n            sortBy: this.sort,\n            order: this.order,\n            page: this.currentPage,\n            perPage: this.rowsPerPage,\n            columnFilters: JSON.stringify(this.columnFilters), // Convert filters to a query string\n        });\n        // Dispatch loading event with full query string\n        this.dispatchEvent(DataTableEvents.LOADING, {\n            queryParams: params.toString(),\n        });\n        try {\n            const res = await fetch(`${this.url}?${params.toString()}`, {\n                method: \"GET\", // Use GET to send the query parameters\n                headers: {\n                    \"Content-Type\": \"application/json\", // No need for body in GET request\n                },\n            });\n\n            const json = await res.json();\n            this.data = json[this.dataSrc] || []; // Access data based on dataSrc passed in constructor\n\n            // Dispatch the loaded event\n            this.dispatchEvent(DataTableEvents.LOADED, {\n                data: this.data,\n                page: this.currentPage,\n                totalItems: json.total || this.data.length,\n                response: json,\n            });\n\n            if (this.data.length === 0) {\n                this.showEmptyStateInTable(\"No records found.\");\n            } else {\n                this.renderTable(this.data); // Render table with new data\n            }\n\n            if (this.paginationBtn) {\n                this.updatePagination(json); // Update pagination if enabled\n            }\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n            this.dispatchEvent(DataTableEvents.ERROR, {\n                error: error,\n                requestParams: params.toString(),\n            });\n        } finally {\n            if (this.enableLoadingSpinner) {\n                this.toggleLoadingSpinner(false);\n            }\n        }\n    }\n    showEmptyStateInTable(message = \"No data available.\") {\n        // Use a stored reference or try to find tbody under your table element\n        let tableBody = null;\n\n        // If you have the table element stored in this.table\n        if (this.table) {\n            tableBody = this.table.querySelector(\"tbody\");\n        }\n\n        // Fallback if not found\n        if (!tableBody) {\n            tableBody = document.getElementById(\"table-body\");\n        }\n\n        if (!tableBody) {\n            console.warn(\"Table body element not found\");\n            return; // Can't show empty state if no tbody\n        }\n\n        // Get number of columns from thead inside your table, or fallback selector\n        let columnCount = 0;\n        if (this.table) {\n            const ths = this.table.querySelectorAll(\"thead tr:first-child th\");\n            columnCount = ths.length;\n        }\n\n        if (columnCount === 0) {\n            // fallback to default number if you want\n            columnCount = 1;\n        }\n\n        tableBody.innerHTML = `\n        <tr>\n            <td colspan=\"${columnCount}\" class=\"text-center text-base-content text-sm py-6\">\n                ${message}\n            </td>\n        </tr>\n    `;\n\n        // Clear pagination container safely\n        let paginationContainer = null;\n\n        if (this.paginationWrapper) {\n            paginationContainer = this.paginationWrapper;\n        } else {\n            paginationContainer = document.getElementById(\"pagination\");\n        }\n\n        if (paginationContainer) {\n            paginationContainer.innerHTML = \"\";\n        }\n    }\n\n    // renderTableHeader() {\n    //     // Remove existing thead\n    //     const oldThead = this.table.querySelector(\"thead\");\n    //     if (oldThead) oldThead.remove();\n\n    //     const thead = this.table.createTHead();\n    //     thead.className = this.theme.header || \"\"; // Proper use for the whole thead\n\n    //     // Optional: render column filters first if enabled\n    //     if (this.columnFilterFields && Array.isArray(this.columnFilterFields)) {\n    //         const filterRow = thead.insertRow();\n    //         // Ensure that filters is initialized in the constructor or before use\n    //         this.columnFilters = this.columnFilters || {}; // Initializes filters as an empty object if not already initialized\n\n    //         this.columns.forEach((column) => {\n    //             if (column.visible === false) return;\n\n    //             const th = document.createElement(\"th\");\n\n    //             th.className = this.theme.headerCell || \"\";\n\n    //             if (this.columnFilterFields.includes(column.name)) {\n    //                 const input = document.createElement(\"input\");\n    //                 input.type = \"search\";\n    //                 input.placeholder = `Filter ${column.label}`;\n    //                 input.className = \"input input-sm input-bordered w-full\";\n\n    //                 input.addEventListener(\n    //                     \"input\",\n    //                     this.debounce((e) => {\n    //                         this.columnFilters[column.name] = e.target.value;\n\n    //                         this.dispatchEvent(DataTableEvents.FILTER, {\n    //                             column: column,\n    //                             value: e.target.value,\n    //                             filters: this.columnFilters,\n    //                             timestamp: new Date().toISOString(),\n    //                             tableId: this.table.id || null,\n    //                             searchDelay: this.searchDelay,\n    //                         });\n\n    //                         this.fetchData();\n    //                     }, this.searchDelay)\n    //                 );\n\n    //                 th.appendChild(input);\n    //             }\n\n    //             filterRow.appendChild(th);\n    //         });\n    //     }\n\n    //     // Render header row\n    //     const headerRow = thead.insertRow();\n    //     this.columns.forEach((column) => {\n    //         if (column.visible === false) return;\n\n    //         const th = document.createElement(\"th\");\n    //         th.classList.add(\"cursor-pointer\");\n\n    //         const spanLabel = document.createElement(\"span\");\n    //         spanLabel.textContent = column.label;\n    //         th.appendChild(spanLabel);\n\n    //         if (this.sortableColumns.includes(column.name)) {\n    //             th.dataset.column = column.name;\n    //             th.dataset.order = this.defaultOrder || \"asc\";\n\n    //             const iconSpan = document.createElement(\"span\");\n    //             iconSpan.className = \"sort-icon ml-2\";\n    //             iconSpan.innerHTML = '<i class=\"fa fa-sort text-gray-400\"></i>';\n    //             th.appendChild(iconSpan);\n\n    //             th.addEventListener(\"click\", () => {\n    //                 const newOrder =\n    //                     th.dataset.order === \"asc\" ? \"desc\" : \"asc\";\n    //                 th.dataset.order = newOrder;\n    //                 this.sort = column.name;\n    //                 this.order = newOrder;\n\n    //                 // Reset icons\n    //                 thead.querySelectorAll(\".sort-icon i\").forEach((i) => {\n    //                     i.className = \"fa fa-sort text-gray-400\";\n    //                 });\n\n    //                 // Update icon\n    //                 const icon = th.querySelector(\".sort-icon i\");\n    //                 icon.className =\n    //                     newOrder === \"asc\"\n    //                         ? \"fa fa-sort-up text-gray-600\"\n    //                         : \"fa fa-sort-down text-gray-600\";\n\n    //                 this.dispatchEvent(DataTableEvents.SORT, {\n    //                     column: column.name,\n    //                     label: column.label,\n    //                     index: this.columns.indexOf(column),\n    //                     direction: newOrder,\n    //                     timestamp: new Date().toISOString(),\n    //                     tableId: this.table.id || null,\n    //                 });\n    //                 if (this.enableSaveState) {\n    //                     this.saveState();\n    //                 }\n    //                 this.fetchData();\n    //             });\n    //         }\n\n    //         headerRow.appendChild(th);\n    //     });\n\n    //     // Ensure tbody exists\n    //     if (!this.table.querySelector(\"tbody\")) {\n    //         const tbody = document.createElement(\"tbody\");\n    //         tbody.id = \"table-body\";\n    //         this.table.appendChild(tbody);\n    //     }\n    // }\n\n    renderTableHeader() {\n        const oldThead = this.table.querySelector(\"thead\");\n        if (oldThead) oldThead.remove();\n\n        const thead = this.table.createTHead();\n        thead.className = this.theme.header || \"\";\n\n        // Optional: make headers sticky\n        if (this.stickyHeader) {\n            thead.classList.add(...(this.theme.headerSticky?.split(\" \") || []));\n        }\n\n        const visibleColumns = this.columns.filter((c) => c.visible !== false);\n        const hasGroups = this.columnGroups?.length > 0;\n\n        // 1. Render Group Headers if applicable\n        if (hasGroups) {\n            this.renderGroupHeaders(thead, visibleColumns);\n        }\n\n        // 2. Render Filter Inputs if applicable\n        if (this.columnFilterFields?.length > 0) {\n            this.renderFilterInputs(thead, visibleColumns);\n        }\n\n        // 3. Always render Column Headers\n        this.renderColumnHeaders(thead, visibleColumns, hasGroups);\n\n        // Ensure tbody exists\n        if (!this.table.querySelector(\"tbody\")) {\n            this.table.appendChild(document.createElement(\"tbody\"));\n        }\n    }\n\n    renderGroupHeaders(thead, visibleColumns) {\n        const groupHeaderRow = thead.insertRow();\n        groupHeaderRow.className = this.theme.groupHeaderRow || \"\";\n\n        const groupSpans = {};\n        visibleColumns.forEach((col) => {\n            if (col.group) {\n                groupSpans[col.group] = (groupSpans[col.group] || 0) + 1;\n            }\n        });\n\n        const groupMap = {};\n        this.columnGroups.forEach((g) => (groupMap[g.key] = g));\n\n        const renderedGroups = new Set();\n        let currentColIndex = 0;\n\n        while (currentColIndex < visibleColumns.length) {\n            const col = visibleColumns[currentColIndex];\n\n            if (col.group && !renderedGroups.has(col.group)) {\n                const th = document.createElement(\"th\");\n                th.colSpan = groupSpans[col.group];\n                th.textContent = groupMap[col.group]?.label || col.group;\n\n                // Merge theme default class with user override\n                const defaultClass = this.theme.groupHeaderCell || \"\";\n                const userClass = groupMap[col.group]?.headerClass || \"\";\n\n                th.className = `${defaultClass} ${userClass}`.trim();\n\n                groupHeaderRow.appendChild(th);\n                renderedGroups.add(col.group);\n                currentColIndex += groupSpans[col.group];\n            } else {\n                const th = document.createElement(\"th\");\n                th.colSpan = 1;\n                groupHeaderRow.appendChild(th);\n                currentColIndex++;\n            }\n        }\n    }\n\n    renderFilterInputs(thead, visibleColumns) {\n        const filterRow = thead.insertRow();\n        filterRow.className = this.theme.filterRow || \"\";\n        this.columnFilters = this.columnFilters || {};\n\n        visibleColumns.forEach((column) => {\n            const th = document.createElement(\"th\");\n            th.className = this.theme.headerCell || \"\";\n\n            if (this.columnFilterFields.includes(column.name)) {\n                const input = document.createElement(\"input\");\n                input.type = \"search\";\n                input.placeholder = `Filter ${column.label}`;\n                input.className = this.theme.filterInput || \"\";\n\n                input.addEventListener(\n                    \"input\",\n                    this.debounce((e) => {\n                        this.columnFilters[column.name] = e.target.value;\n                        this.dispatchEvent(DataTableEvents.FILTER, {\n                            column: column,\n                            value: e.target.value,\n                            filters: this.columnFilters,\n                            timestamp: new Date().toISOString(),\n                            tableId: this.table.id || null,\n                            searchDelay: this.searchDelay,\n                        });\n                        this.fetchData();\n                    }, this.searchDelay)\n                );\n\n                th.appendChild(input);\n            }\n\n            filterRow.appendChild(th);\n        });\n    }\n\n    renderColumnHeaders(thead, visibleColumns, hasGroups) {\n        const headerRow = thead.insertRow();\n\n        visibleColumns.forEach((column, index) => {\n            const th = document.createElement(\"th\");\n            if (this.theme.headerCell) {\n                th.className = this.theme.headerCell;\n            } else {\n                th.classList.add(\"cursor-pointer\");\n            }\n\n            // Mark group boundaries\n            if (hasGroups) {\n                const prevCol = visibleColumns[index - 1];\n                const nextCol = visibleColumns[index + 1];\n\n                if (!prevCol || prevCol.group !== column.group) {\n                    th.dataset.groupStart = \"true\";\n                }\n                if (!nextCol || nextCol.group !== column.group) {\n                    th.dataset.groupEnd = \"true\";\n                }\n            }\n\n            th.dataset.columnName = column.name;\n\n            // Tooltip\n            if (column.tooltip) {\n                th.title = column.tooltip;\n            }\n\n            // Label span\n            const spanLabel = document.createElement(\"span\");\n            spanLabel.textContent = column.label;\n            th.appendChild(spanLabel);\n\n            // Sorting logic\n            if (this.sortableColumns?.includes(column.name)) {\n                th.classList.add(\"cursor-pointer\");\n                th.dataset.column = column.name;\n                th.dataset.order = this.defaultOrder || \"asc\";\n\n                const iconSpan = document.createElement(\"span\");\n                iconSpan.className = \"sort-icon ml-2\";\n                iconSpan.innerHTML = '<i class=\"fa fa-sort text-gray-400\"></i>';\n                th.appendChild(iconSpan);\n\n                th.addEventListener(\"click\", () => {\n                    const newOrder =\n                        th.dataset.order === \"asc\" ? \"desc\" : \"asc\";\n                    th.dataset.order = newOrder;\n                    this.sort = column.name;\n                    this.order = newOrder;\n\n                    // Reset icons\n                    thead.querySelectorAll(\".sort-icon i\").forEach((i) => {\n                        i.className = \"fa fa-sort text-gray-400\";\n                    });\n\n                    // Update icon\n                    const icon = th.querySelector(\".sort-icon i\");\n                    icon.className =\n                        newOrder === \"asc\"\n                            ? \"fa fa-sort-up text-gray-600\"\n                            : \"fa fa-sort-down text-gray-600\";\n\n                    this.dispatchEvent(DataTableEvents.SORT, {\n                        column: column.name,\n                        label: column.label,\n                        index: this.columns.indexOf(column),\n                        direction: newOrder,\n                        timestamp: new Date().toISOString(),\n                        tableId: this.table.id || null,\n                    });\n\n                    if (this.enableSaveState) {\n                        this.saveState();\n                    }\n\n                    this.fetchData();\n                });\n            }\n\n            headerRow.appendChild(th);\n        });\n    }\n\n    debounce(fn, delay) {\n        let timer;\n        return function (...args) {\n            clearTimeout(timer);\n            timer = setTimeout(() => fn.apply(this, args), delay);\n        };\n    }\n\n    renderTable(rows) {\n        const tbody = this.table.querySelector(\"tbody\") || this.createTBody();\n        tbody.innerHTML = \"\";\n\n        if (!this.columns?.length) {\n            console.error(\"Columns configuration is missing or empty\");\n            return;\n        }\n        tbody.className = this.theme.body || \"\"; // Use tbody theme if provided\n\n        rows.forEach((row, rowIndex) => {\n            const tr = document.createElement(\"tr\");\n            tr.dataset.id = row.id;\n\n            // Apply zebra striping\n\n            // Store zebra class in dataset\n            // const zebraClass = rowIndex % 2 === 0 ? \"bg-white\" : \"bg-gray-50\";\n            // tr.classList.add(zebraClass);\n            // tr.dataset.zebra = zebraClass;\n\n            this.columns.forEach((column) => {\n                if (column.visible === false) return;\n\n                const td = document.createElement(\"td\");\n                this.renderCell(td, row, column, rowIndex);\n                tr.appendChild(td);\n            });\n\n            tbody.appendChild(tr);\n        });\n    }\n\n    createTBody() {\n        const tbody = document.createElement(\"tbody\");\n        tbody.id = \"table-body\";\n        tbody.className = this.theme.body || \"\"; // Use tbody theme if provided\n        this.table.appendChild(tbody);\n        return tbody;\n    }\n    renderCell(td, row, column, rowIndex) {\n        const value = row[column.name];\n        td.dataset.column = column.name;\n        td.dataset.type = column.type;\n\n        td.className = this.theme.cell;\n\n        // Apply column-specific classes\n        if (column.align) td.classList.add(`text-${column.align}`);\n        if (column.class) td.classList.add(...column.class.split(\" \"));\n        if (column.width) td.style.width = column.width;\n\n        // Custom renderer\n        // Ensure rendered is always a string\n        let rendered = \"\";\n\n        if (column.render && typeof column.render === \"function\") {\n            rendered = column.render(value, row);\n        } else if (value !== undefined && value !== null) {\n            rendered = String(value);\n        }\n\n        if (\n            column.highlightable &&\n            this.search &&\n            typeof rendered === \"string\"\n        ) {\n            const highlightConfig =\n                typeof column.highlightable === \"object\"\n                    ? column.highlightable\n                    : {};\n\n            const color =\n                highlightConfig.color ||\n                this.theme.highlight ||\n                \"bg-yellow-200\";\n\n            const tag = highlightConfig.tag || \"mark\";\n\n            const escapedSearch = this.search.replace(\n                /[-\\/\\\\^$*+?.()|[\\]{}]/g,\n                \"\\\\$&\"\n            );\n            const regex = new RegExp(`(${escapedSearch})`, \"gi\");\n\n            rendered = rendered.replace(\n                regex,\n                `<${tag} class=\"${color}\">$1</${tag}>`\n            );\n        }\n\n        td.innerHTML = rendered;\n    }\n    // ==============================\n    // EXPORT FUNCTIONALITY SECTION\n    // ==============================\n    // This section handles exporting table data to various formats such as Excel or CSV.\n    // It initializes event listeners on export-related buttons, ensuring that data can be\n    // downloaded either in the currently visible form or the complete dataset (all records).\n    // The actual data export logic (e.g., formatting, converting, triggering download) is\n    // handled in the corresponding methods (e.g., exportToExcel, downloadCSV).\n    // Make sure that export fetches all data, not just the current page, for full exports.\n    // ==============================\n\n    // ==============================\n    // EXPORT TO EXCEL\n    // ==============================\n    // Improved exportToExcel method with chunking and streaming for better memory efficiency\n    async exportToExcel() {\n        try {\n            this.toggleLoadingSpinner(true);\n\n            // Use visible columns only for export\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Create export parameters\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            // Create a download link to be used later\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.style.display = \"none\";\n            document.body.appendChild(downloadLink);\n\n            // Initialize streaming writer\n            const fileName = `table-export-${new Date()\n                .toISOString()\n                .slice(0, 10)}.csv`;\n            const streamSaver =\n                window.streamSaver || this.createStreamSaverPolyfill();\n            const writableStream = streamSaver.createWriteStream(fileName);\n            const writer = writableStream.getWriter();\n\n            try {\n                // Create header row\n                const headers = visibleColumns.map(\n                    (col) => `\"${(col.label || col.name).replace(/\"/g, '\"\"')}\"`\n                );\n                const headerRow = headers.join(\",\") + \"\\r\\n\";\n                await writer.write(new TextEncoder().encode(headerRow));\n\n                // Process data in chunks\n                let page = 1;\n                let chunkSize = 1000; // Process 1000 records at a time\n                let hasMoreData = true;\n\n                while (hasMoreData) {\n                    // Update pagination parameters for this chunk\n                    exportParams.set(\"page\", page);\n                    exportParams.set(\"perPage\", chunkSize);\n\n                    // Fetch chunk\n                    const response = await fetch(\n                        `${this.url}?${exportParams.toString()}`,\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"X-Requested-For\": \"export-chunk\",\n                            },\n                        }\n                    );\n\n                    if (!response.ok) {\n                        throw new Error(\n                            `Export request failed with status: ${response.status}`\n                        );\n                    }\n\n                    const json = await response.json();\n                    const dataChunk = json[this.dataSrc] || [];\n\n                    // Check if this is the last chunk\n                    hasMoreData = dataChunk.length === chunkSize;\n\n                    // Process and write this chunk of data\n                    if (dataChunk.length > 0) {\n                        let chunkData = \"\";\n\n                        // Process each row in the chunk\n                        dataChunk.forEach((row) => {\n                            const csvRow = [];\n                            visibleColumns.forEach((column) => {\n                                // Handle cell value based on column configuration\n                                let cellValue = row[column.name] || \"\";\n\n                                // Apply custom render function if it exists and is meant for export\n                                if (column.exportRender) {\n                                    cellValue = column.exportRender(\n                                        cellValue,\n                                        row\n                                    );\n                                } else if (\n                                    column.render &&\n                                    column.useRenderForExport\n                                ) {\n                                    // Extract text content from HTML if render function is used\n                                    const tempDiv =\n                                        document.createElement(\"div\");\n                                    tempDiv.innerHTML = column.render(\n                                        cellValue,\n                                        row\n                                    );\n                                    cellValue =\n                                        tempDiv.textContent ||\n                                        tempDiv.innerText ||\n                                        \"\";\n                                }\n\n                                // Escape quotes and format for CSV\n                                csvRow.push(\n                                    `\"${String(cellValue).replace(/\"/g, '\"\"')}\"`\n                                );\n                            });\n\n                            chunkData += csvRow.join(\",\") + \"\\r\\n\";\n                        });\n\n                        // Write this chunk to the stream\n                        await writer.write(new TextEncoder().encode(chunkData));\n                    }\n\n                    // Move to next page\n                    page++;\n                }\n\n                // Close the stream and complete the download\n                await writer.close();\n                console.log(\"Export completed successfully\");\n            } catch (error) {\n                await writer.abort(error);\n                throw error;\n            }\n        } catch (error) {\n            console.error(\"Error exporting data:\", error);\n            alert(\"Error exporting data. Please try again.\");\n\n            // Fallback method if streaming fails\n            this.exportToExcelFallback();\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Fallback export method when streaming is not supported\n    async exportToExcelFallback() {\n        try {\n            console.log(\"Using fallback export method\");\n            this.toggleLoadingSpinner(true);\n\n            // Fetch with more moderate parameters\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                page: 1,\n                perPage: 5000, // Smaller batch size for fallback\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            const response = await fetch(\n                `${this.url}?${exportParams.toString()}`\n            );\n            if (!response.ok) {\n                throw new Error(\n                    `Export request failed with status: ${response.status}`\n                );\n            }\n\n            const json = await response.json();\n            const data = json[this.dataSrc] || [];\n\n            if (data.length === 0) {\n                alert(\"No data available for export\");\n                return;\n            }\n\n            // Use visible columns only\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Build CSV content\n            let csvContent = \"\";\n\n            // Headers\n            const headers = visibleColumns.map(\n                (col) => `\"${(col.label || col.name).replace(/\"/g, '\"\"')}\"`\n            );\n            csvContent += headers.join(\",\") + \"\\r\\n\";\n\n            // Data rows (process in smaller batches to avoid memory issues)\n            const batchSize = 500;\n            for (let i = 0; i < data.length; i += batchSize) {\n                const batch = data.slice(i, i + batchSize);\n\n                batch.forEach((row) => {\n                    const csvRow = [];\n                    visibleColumns.forEach((column) => {\n                        let cellValue = row[column.name] || \"\";\n\n                        if (column.exportRender) {\n                            cellValue = column.exportRender(cellValue, row);\n                        } else if (column.render && column.useRenderForExport) {\n                            const tempDiv = document.createElement(\"div\");\n                            tempDiv.innerHTML = column.render(cellValue, row);\n                            cellValue =\n                                tempDiv.textContent || tempDiv.innerText || \"\";\n                        }\n\n                        csvRow.push(\n                            `\"${String(cellValue).replace(/\"/g, '\"\"')}\"`\n                        );\n                    });\n                    csvContent += csvRow.join(\",\") + \"\\r\\n\";\n                });\n            }\n\n            // Download using Blob\n            const blob = new Blob([csvContent], {\n                type: \"text/csv;charset=utf-8;\",\n            });\n            const url = URL.createObjectURL(blob);\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.href = url;\n            downloadLink.download = `table-export-${new Date()\n                .toISOString()\n                .slice(0, 10)}.csv`;\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n            URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error(\"Fallback export failed:\", error);\n            alert(\n                \"Export failed. The dataset may be too large for your browser.\"\n            );\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Create a polyfill for streamSaver if needed\n    createStreamSaverPolyfill() {\n        return {\n            createWriteStream: (fileName) => {\n                // In-memory accumulation (not ideal but works as fallback)\n                let data = \"\";\n\n                return {\n                    getWriter: () => ({\n                        write: async (chunk) => {\n                            data += new TextDecoder().decode(chunk);\n                            return Promise.resolve();\n                        },\n                        close: async () => {\n                            // Download the accumulated data\n                            const blob = new Blob([data], {\n                                type: \"text/csv;charset=utf-8;\",\n                            });\n                            const url = URL.createObjectURL(blob);\n                            const a = document.createElement(\"a\");\n                            a.href = url;\n                            a.download = fileName;\n                            document.body.appendChild(a);\n                            a.click();\n                            document.body.removeChild(a);\n                            URL.revokeObjectURL(url);\n                            data = \"\"; // Free memory\n                            return Promise.resolve();\n                        },\n                        abort: async () => {\n                            data = \"\"; // Free memory\n                            return Promise.resolve();\n                        },\n                    }),\n                };\n            },\n        };\n    }\n\n    // This method handles chunked data fetching for larger datasets\n    async fetchDataForExport(page = 1, perPage = 1000) {\n        try {\n            // Configure request parameters with pagination support\n            const params = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                page: page,\n                perPage: perPage,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\", // Signal to backend this is an export request\n            });\n\n            const response = await fetch(`${this.url}?${params.toString()}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-Requested-For\": \"export\", // Additional header for export\n                    \"Cache-Control\": \"no-cache\", // Prevent caching of export requests\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error(\n                    `Export request failed with status: ${response.status}`\n                );\n            }\n\n            const json = await response.json();\n            return {\n                data: json[this.dataSrc] || [],\n                // Return pagination info if available\n                pagination: {\n                    current_page: json.current_page || page,\n                    last_page: json.last_page || 1,\n                    total:\n                        json.total ||\n                        (json[this.dataSrc] ? json[this.dataSrc].length : 0),\n                },\n            };\n        } catch (error) {\n            console.error(\"Failed to fetch data for export:\", error);\n            throw error; // Re-throw to handle in the calling function\n        }\n    }\n\n    // Fixed downloadCSV method\n    // Improved exportToExcel method with chunking and streaming for better memory efficiency\n    async exportToExcel() {\n        try {\n            this.toggleLoadingSpinner(true);\n\n            // Use visible columns only for export\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Create export parameters\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            // Create a download link to be used later\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.style.display = \"none\";\n            document.body.appendChild(downloadLink);\n\n            // Initialize streaming writer\n            const fileName = `table-export-${new Date()\n                .toISOString()\n                .slice(0, 10)}.csv`;\n            const streamSaver =\n                window.streamSaver || this.createStreamSaverPolyfill();\n            const writableStream = streamSaver.createWriteStream(fileName);\n            const writer = writableStream.getWriter();\n\n            try {\n                // Create header row\n                const headers = visibleColumns.map(\n                    (col) => `\"${(col.label || col.name).replace(/\"/g, '\"\"')}\"`\n                );\n                const headerRow = headers.join(\",\") + \"\\r\\n\";\n                await writer.write(new TextEncoder().encode(headerRow));\n\n                // Process data in chunks\n                let page = 1;\n                let chunkSize = 1000; // Process 1000 records at a time\n                let hasMoreData = true;\n\n                while (hasMoreData) {\n                    // Update pagination parameters for this chunk\n                    exportParams.set(\"page\", page);\n                    exportParams.set(\"perPage\", chunkSize);\n\n                    // Fetch chunk\n                    const response = await fetch(\n                        `${this.url}?${exportParams.toString()}`,\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"X-Requested-For\": \"export-chunk\",\n                            },\n                        }\n                    );\n\n                    if (!response.ok) {\n                        throw new Error(\n                            `Export request failed with status: ${response.status}`\n                        );\n                    }\n\n                    const json = await response.json();\n                    const dataChunk = json[this.dataSrc] || [];\n\n                    // Check if this is the last chunk\n                    hasMoreData = dataChunk.length === chunkSize;\n\n                    // Process and write this chunk of data\n                    if (dataChunk.length > 0) {\n                        let chunkData = \"\";\n\n                        // Process each row in the chunk\n                        dataChunk.forEach((row) => {\n                            const csvRow = [];\n                            visibleColumns.forEach((column) => {\n                                // Handle cell value based on column configuration\n                                let cellValue = row[column.name] || \"\";\n\n                                // Apply custom render function if it exists and is meant for export\n                                if (column.exportRender) {\n                                    cellValue = column.exportRender(\n                                        cellValue,\n                                        row\n                                    );\n                                } else if (\n                                    column.render &&\n                                    column.useRenderForExport\n                                ) {\n                                    // Extract text content from HTML if render function is used\n                                    const tempDiv =\n                                        document.createElement(\"div\");\n                                    tempDiv.innerHTML = column.render(\n                                        cellValue,\n                                        row\n                                    );\n                                    cellValue =\n                                        tempDiv.textContent ||\n                                        tempDiv.innerText ||\n                                        \"\";\n                                }\n\n                                // Escape quotes and format for CSV\n                                csvRow.push(\n                                    `\"${String(cellValue).replace(/\"/g, '\"\"')}\"`\n                                );\n                            });\n\n                            chunkData += csvRow.join(\",\") + \"\\r\\n\";\n                        });\n\n                        // Write this chunk to the stream\n                        await writer.write(new TextEncoder().encode(chunkData));\n                    }\n\n                    // Move to next page\n                    page++;\n                }\n\n                // Close the stream and complete the download\n                await writer.close();\n                console.log(\"Export completed successfully\");\n            } catch (error) {\n                await writer.abort(error);\n                throw error;\n            }\n        } catch (error) {\n            console.error(\"Error exporting data:\", error);\n            alert(\"Error exporting data. Please try again.\");\n\n            // Fallback method if streaming fails\n            this.exportToExcelFallback();\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Fallback export method when streaming is not supported\n    async exportToExcelFallback() {\n        try {\n            console.log(\"Using fallback export method\");\n            this.toggleLoadingSpinner(true);\n\n            // Fetch with more moderate parameters\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                page: 1,\n                perPage: 5000, // Smaller batch size for fallback\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            const response = await fetch(\n                `${this.url}?${exportParams.toString()}`\n            );\n            if (!response.ok) {\n                throw new Error(\n                    `Export request failed with status: ${response.status}`\n                );\n            }\n\n            const json = await response.json();\n            const data = json[this.dataSrc] || [];\n\n            if (data.length === 0) {\n                alert(\"No data available for export\");\n                return;\n            }\n\n            // Use visible columns only\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Build CSV content\n            let csvContent = \"\";\n\n            // Headers\n            const headers = visibleColumns.map(\n                (col) => `\"${(col.label || col.name).replace(/\"/g, '\"\"')}\"`\n            );\n            csvContent += headers.join(\",\") + \"\\r\\n\";\n\n            // Data rows (process in smaller batches to avoid memory issues)\n            const batchSize = 500;\n            for (let i = 0; i < data.length; i += batchSize) {\n                const batch = data.slice(i, i + batchSize);\n\n                batch.forEach((row) => {\n                    const csvRow = [];\n                    visibleColumns.forEach((column) => {\n                        let cellValue = row[column.name] || \"\";\n\n                        if (column.exportRender) {\n                            cellValue = column.exportRender(cellValue, row);\n                        } else if (column.render && column.useRenderForExport) {\n                            const tempDiv = document.createElement(\"div\");\n                            tempDiv.innerHTML = column.render(cellValue, row);\n                            cellValue =\n                                tempDiv.textContent || tempDiv.innerText || \"\";\n                        }\n\n                        csvRow.push(\n                            `\"${String(cellValue).replace(/\"/g, '\"\"')}\"`\n                        );\n                    });\n                    csvContent += csvRow.join(\",\") + \"\\r\\n\";\n                });\n            }\n\n            // Download using Blob\n            const blob = new Blob([csvContent], {\n                type: \"text/csv;charset=utf-8;\",\n            });\n            const url = URL.createObjectURL(blob);\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.href = url;\n            downloadLink.download = `table-export-${new Date()\n                .toISOString()\n                .slice(0, 10)}.csv`;\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n            URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error(\"Fallback export failed:\", error);\n            alert(\n                \"Export failed. The dataset may be too large for your browser.\"\n            );\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Create a polyfill for streamSaver if needed\n    createStreamSaverPolyfill() {\n        return {\n            createWriteStream: (fileName) => {\n                // In-memory accumulation (not ideal but works as fallback)\n                let data = \"\";\n\n                return {\n                    getWriter: () => ({\n                        write: async (chunk) => {\n                            data += new TextDecoder().decode(chunk);\n                            return Promise.resolve();\n                        },\n                        close: async () => {\n                            // Download the accumulated data\n                            const blob = new Blob([data], {\n                                type: \"text/csv;charset=utf-8;\",\n                            });\n                            const url = URL.createObjectURL(blob);\n                            const a = document.createElement(\"a\");\n                            a.href = url;\n                            a.download = fileName;\n                            document.body.appendChild(a);\n                            a.click();\n                            document.body.removeChild(a);\n                            URL.revokeObjectURL(url);\n                            data = \"\"; // Free memory\n                            return Promise.resolve();\n                        },\n                        abort: async () => {\n                            data = \"\"; // Free memory\n                            return Promise.resolve();\n                        },\n                    }),\n                };\n            },\n        };\n    }\n\n    // Enhanced fetchDataForExport with support for server-side pagination\n    // This method handles chunked data fetching for larger datasets\n    async fetchDataForExport(page = 1, perPage = 1000) {\n        try {\n            // Configure request parameters with pagination support\n            const params = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                page: page,\n                perPage: perPage,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\", // Signal to backend this is an export request\n            });\n\n            const response = await fetch(`${this.url}?${params.toString()}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-Requested-For\": \"export\", // Additional header for export\n                    \"Cache-Control\": \"no-cache\", // Prevent caching of export requests\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error(\n                    `Export request failed with status: ${response.status}`\n                );\n            }\n\n            const json = await response.json();\n            return {\n                data: json[this.dataSrc] || [],\n                // Return pagination info if available\n                pagination: {\n                    current_page: json.current_page || page,\n                    last_page: json.last_page || 1,\n                    total:\n                        json.total ||\n                        (json[this.dataSrc] ? json[this.dataSrc].length : 0),\n                },\n            };\n        } catch (error) {\n            console.error(\"Failed to fetch data for export:\", error);\n            throw error; // Re-throw to handle in the calling function\n        }\n    }\n\n    // ==============================\n    // EXPORT TO downloadCSV\n    // ==============================\n\n    // Improved downloadCSV method to export all data, not just visible rows\n    async downloadCSV() {\n        try {\n            this.toggleLoadingSpinner(true);\n\n            // Use visible columns only\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Create export parameters - similar to the exportToExcel method\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            // Create a CSV content builder with headers\n            const headers = visibleColumns.map(\n                (col) => `\"${(col.label || col.name).replace(/\"/g, '\"\"')}\"`\n            );\n            let csvContent = headers.join(\",\") + \"\\r\\n\";\n\n            // Process data in chunks to avoid memory issues\n            let page = 1;\n            let chunkSize = 1000; // Process 1000 records at a time\n            let hasMoreData = true;\n            let totalProcessed = 0;\n\n            while (hasMoreData) {\n                // Update pagination parameters for this chunk\n                exportParams.set(\"page\", page);\n                exportParams.set(\"perPage\", chunkSize);\n\n                try {\n                    // Fetch chunk\n                    const response = await fetch(\n                        `${this.url}?${exportParams.toString()}`,\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"X-Requested-For\": \"export-csv\",\n                            },\n                        }\n                    );\n\n                    if (!response.ok) {\n                        throw new Error(\n                            `CSV export request failed with status: ${response.status}`\n                        );\n                    }\n\n                    const json = await response.json();\n                    const dataChunk = json[this.dataSrc] || [];\n\n                    // Check if this is the last chunk\n                    hasMoreData = dataChunk.length === chunkSize;\n                    totalProcessed += dataChunk.length;\n\n                    // Process and add this chunk of data to CSV content\n                    if (dataChunk.length > 0) {\n                        dataChunk.forEach((row) => {\n                            const csvRow = [];\n                            visibleColumns.forEach((column) => {\n                                // Handle cell value based on column configuration\n                                let cellValue = row[column.name] || \"\";\n\n                                // Apply custom render function if it exists and is meant for export\n                                if (column.exportRender) {\n                                    cellValue = column.exportRender(\n                                        cellValue,\n                                        row\n                                    );\n                                } else if (\n                                    column.render &&\n                                    column.useRenderForExport\n                                ) {\n                                    // Extract text content from HTML if render function is used\n                                    const tempDiv =\n                                        document.createElement(\"div\");\n                                    tempDiv.innerHTML = column.render(\n                                        cellValue,\n                                        row\n                                    );\n                                    cellValue =\n                                        tempDiv.textContent ||\n                                        tempDiv.innerText ||\n                                        \"\";\n                                }\n\n                                // Escape quotes and format for CSV\n                                csvRow.push(\n                                    `\"${String(cellValue).replace(/\"/g, '\"\"')}\"`\n                                );\n                            });\n\n                            csvContent += csvRow.join(\",\") + \"\\r\\n\";\n                        });\n                    }\n\n                    // Move to next page\n                    page++;\n\n                    // Safety check - don't process too many records to avoid memory issues\n                    if (totalProcessed > 100000) {\n                        console.warn(\n                            \"Reached maximum safe export size (100,000 records)\"\n                        );\n                        hasMoreData = false;\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching data chunk:\", error);\n                    hasMoreData = false; // Stop on error\n                }\n            }\n\n            // Create and trigger download\n            const blob = new Blob([csvContent], {\n                type: \"text/csv;charset=utf-8;\",\n            });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = `table-data-${new Date()\n                .toISOString()\n                .slice(0, 10)}.csv`;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url); // Clean up the URL object\n\n            console.log(`CSV export completed with ${totalProcessed} records`);\n        } catch (error) {\n            console.error(\"Error downloading CSV:\", error);\n            alert(\"Error downloading CSV. Please try again.\");\n\n            // Fallback to current page only if full export fails\n            this.downloadCurrentPageCSV();\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Fallback method that downloads only the current page data\n    downloadCurrentPageCSV() {\n        try {\n            if (!this.table) return;\n\n            let csv = \"\";\n            const headers = this.table.querySelectorAll(\"thead th\");\n            let headerRow = [];\n\n            headers.forEach((header) => {\n                const headerText = header.innerText.trim();\n                headerRow.push(`\"${headerText.replace(/\"/g, '\"\"')}\"`);\n            });\n\n            csv += headerRow.join(\",\") + \"\\r\\n\";\n\n            const rows = this.table.querySelectorAll(\"tbody tr\");\n            rows.forEach((row) => {\n                let rowData = [];\n                row.querySelectorAll(\"td\").forEach((td) => {\n                    // Get only text content, strip HTML\n                    const cellText = td.innerText.trim();\n                    rowData.push(`\"${cellText.replace(/\"/g, '\"\"')}\"`);\n                });\n                csv += rowData.join(\",\") + \"\\r\\n\";\n            });\n\n            const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = `current-page-data-${new Date()\n                .toISOString()\n                .slice(0, 10)}.csv`;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url); // Clean up the URL object\n\n            alert(\n                \"Only current page data was exported due to an error with the full export.\"\n            );\n        } catch (error) {\n            console.error(\"Error with fallback CSV download:\", error);\n            alert(\"Unable to download data. Please try again later.\");\n        }\n    }\n\n    // ==============================\n    // EXPORT TO print\n    // ==============================\n\n    // Add print functionality to DataTable class\n    printTable() {\n        try {\n            this.toggleLoadingSpinner(true);\n\n            // Get current table data and structure\n            const tableId = this.table.id;\n            const title =\n                document.querySelector(`#${tableId} caption`)?.textContent ||\n                \"Table Data\";\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Create a new window for printing\n            const printWindow = window.open(\n                \"\",\n                \"_blank\",\n                \"height=600,width=800\"\n            );\n            if (!printWindow) {\n                alert(\"Please allow pop-ups to use the print feature.\");\n                return;\n            }\n\n            // Set up the print window content with styles\n            printWindow.document.write(`\n            <!DOCTYPE html>\n            <html lang=\"en\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>Print: ${title}</title>\n                <style>\n                    @media print {\n                        @page {\n                            size: landscape;\n                            margin: 0.5in;\n                        }\n                    }\n                    body {\n                        font-family: Arial, sans-serif;\n                        line-height: 1.4;\n                        color: #333;\n                        margin: 20px;\n                    }\n                    .print-header {\n                        text-align: center;\n                        margin-bottom: 20px;\n                    }\n                    .print-title {\n                        font-size: 20px;\n                        font-weight: bold;\n                        margin: 0;\n                    }\n                    .print-subtitle {\n                        font-size: 14px;\n                        color: #666;\n                        margin: 5px 0 20px;\n                    }\n                    .print-meta {\n                        font-size: 12px;\n                        color: #777;\n                        text-align: right;\n                    }\n                    .print-filters {\n                        font-size: 12px;\n                        margin-bottom: 15px;\n                        padding: 10px;\n                        background-color: #f5f5f5;\n                        border-radius: 4px;\n                    }\n                    table {\n                        width: 100%;\n                        border-collapse: collapse;\n                        margin-bottom: 20px;\n                        page-break-inside: auto;\n                    }\n                    tr {\n                        page-break-inside: avoid;\n                        page-break-after: auto;\n                    }\n                    thead {\n                        display: table-header-group;\n                    }\n                    th, td {\n                        padding: 8px;\n                        text-align: left;\n                        border-bottom: 1px solid #ddd;\n                        font-size: 12px;\n                    }\n                    th {\n                        background-color: #f0f0f0;\n                        font-weight: bold;\n                    }\n                    tbody tr:nth-child(even) {\n                        background-color: #f9f9f9;\n                    }\n                    tfoot {\n                        display: table-footer-group;\n                    }\n                    .print-footer {\n                        text-align: center;\n                        font-size: 12px;\n                        color: #777;\n                        margin-top: 30px;\n                        position: fixed;\n                        bottom: 20px;\n                        left: 0;\n                        right: 0;\n                    }\n                    .loading {\n                        text-align: center;\n                        padding: 40px;\n                        font-size: 18px;\n                        color: #666;\n                    }\n                    .no-print {\n                        display: none;\n                    }\n                    .action-buttons {\n                        text-align: center;\n                        margin: 20px 0;\n                    }\n                    .action-buttons button {\n                        padding: 8px 15px;\n                        margin: 0 5px;\n                        background: #4a6cf7;\n                        color: white;\n                        border: none;\n                        border-radius: 4px;\n                        cursor: pointer;\n                    }\n                    .action-buttons button:hover {\n                        background: #3a56d4;\n                    }\n                    @media print {\n                        .no-print, .action-buttons {\n                            display: none !important;\n                        }\n                    }\n                </style>\n            </head>\n            <body>\n                <div class=\"print-header\">\n                    <h1 class=\"print-title\">${title}</h1>\n                    <p class=\"print-subtitle\">Data Export</p>\n                    <p class=\"print-meta\">Generated on: ${new Date().toLocaleString()}</p>\n                </div>\n\n                <div class=\"print-filters\">\n                    <strong>Filters:</strong>\n                    ${\n                        this.search\n                            ? `Search: \"${this.search}\"`\n                            : \"No search applied\"\n                    } |\n                    Sorted by: ${this.sort} (${this.order}) |\n                    ${\n                        Object.keys(this.columnFilters).length > 0\n                            ? `Column filters: ${Object.entries(\n                                  this.columnFilters\n                              )\n                                  .map(([col, val]) => `${col}: \"${val}\"`)\n                                  .join(\", \")}`\n                            : \"No column filters applied\"\n                    }\n                </div>\n\n                <div class=\"loading\">Loading data for printing...</div>\n\n                <table id=\"print-table\">\n                    <thead>\n                        <tr>\n                            ${visibleColumns\n                                .map(\n                                    (col) => `<th>${col.label || col.name}</th>`\n                                )\n                                .join(\"\")}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <!-- Data will be inserted here -->\n                    </tbody>\n                </table>\n\n                <div class=\"print-footer\">\n                    Page <span class=\"page-num\"></span>\n                </div>\n\n                <div class=\"action-buttons no-print\">\n                    <button onclick=\"window.print();\">Print</button>\n                    <button onclick=\"window.close();\">Close</button>\n                </div>\n\n                <script>\n                    // Page numbering for print\n                    window.onbeforeprint = function() {\n                        const pageNumSpans = document.querySelectorAll('.page-num');\n                        pageNumSpans.forEach(span => span.className = 'page-num-placeholder');\n                    };\n                </script>\n            </body>\n            </html>\n        `);\n\n            // Now fetch the data to display\n            this.fetchDataForPrint(printWindow);\n        } catch (error) {\n            console.error(\"Error preparing print view:\", error);\n            alert(\"Error preparing print view. Please try again.\");\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Method to fetch and render data for printing\n    async fetchDataForPrint(printWindow) {\n        try {\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n            const printTbody =\n                printWindow.document.querySelector(\"#print-table tbody\");\n            const loadingDiv = printWindow.document.querySelector(\".loading\");\n\n            // Define the maximum records to print\n            const maxPrintRecords = 5000; // Adjust based on your needs\n\n            // Process data in chunks to avoid memory issues\n            let page = 1;\n            let chunkSize = 1000; // Process 1000 records at a time\n            let hasMoreData = true;\n            let totalProcessed = 0;\n            let tableContent = \"\";\n\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            while (hasMoreData && totalProcessed < maxPrintRecords) {\n                // Update pagination parameters for this chunk\n                exportParams.set(\"page\", page);\n                exportParams.set(\"perPage\", chunkSize);\n\n                try {\n                    // Fetch chunk\n                    const response = await fetch(\n                        `${this.url}?${exportParams.toString()}`,\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"X-Requested-For\": \"print\",\n                            },\n                        }\n                    );\n\n                    if (!response.ok) {\n                        throw new Error(\n                            `Print data request failed with status: ${response.status}`\n                        );\n                    }\n\n                    const json = await response.json();\n                    const dataChunk = json[this.dataSrc] || [];\n\n                    // Check if this is the last chunk\n                    hasMoreData = dataChunk.length === chunkSize;\n                    totalProcessed += dataChunk.length;\n\n                    // Process and add this chunk of data to table content\n                    if (dataChunk.length > 0) {\n                        dataChunk.forEach((row) => {\n                            tableContent += \"<tr>\";\n\n                            visibleColumns.forEach((column) => {\n                                // Handle cell value based on column configuration\n                                let cellValue = row[column.name] || \"\";\n\n                                // Apply custom render function if it exists and is meant for print\n                                if (column.printRender) {\n                                    cellValue = column.printRender(\n                                        cellValue,\n                                        row\n                                    );\n                                } else if (\n                                    column.render &&\n                                    column.useRenderForPrint\n                                ) {\n                                    // Use the render function\n                                    cellValue = column.render(cellValue, row);\n                                }\n\n                                // Add the cell to the row\n                                tableContent += `<td>${cellValue}</td>`;\n                            });\n\n                            tableContent += \"</tr>\";\n                        });\n                    }\n\n                    // Move to next page\n                    page++;\n                } catch (error) {\n                    console.error(\n                        \"Error fetching data chunk for print:\",\n                        error\n                    );\n                    hasMoreData = false; // Stop on error\n\n                    // Show error in print window\n                    printWindow.document.querySelector(\n                        \".loading\"\n                    ).innerHTML = `<div style=\"color:red;\">Error loading data: ${error.message}</div>`;\n                }\n            }\n\n            // Add warning if truncated\n            if (totalProcessed >= maxPrintRecords && hasMoreData) {\n                printWindow.document.querySelector(\n                    \".print-subtitle\"\n                ).innerHTML += ` <span style=\"color:red;\">(Limited to ${maxPrintRecords} records)</span>`;\n            }\n\n            // Update the print window with the data\n            if (printTbody) {\n                loadingDiv.style.display = \"none\";\n                printTbody.innerHTML = tableContent;\n\n                // Add record count to subtitle\n                const subtitle =\n                    printWindow.document.querySelector(\".print-subtitle\");\n                subtitle.innerHTML += ` (${totalProcessed} records)`;\n\n                // Add date range if available\n                if (this.dateRangeFilter) {\n                    const filters =\n                        printWindow.document.querySelector(\".print-filters\");\n                    filters.innerHTML += `<br>Date Range: ${this.dateRangeFilter}`;\n                }\n            }\n        } catch (error) {\n            console.error(\"Error preparing print data:\", error);\n            printWindow.document.querySelector(\n                \".loading\"\n            ).innerHTML = `<div style=\"color:red;\">Error preparing print data: ${error.message}</div>`;\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // ==============================\n    // PDF Download\n    // ==============================\n    // The downloadPdf method using jsPDF and autoTable\n    // ==============================\n    // PDF Download\n    // ==============================\n    downloadPdf() {\n        try {\n            this.toggleLoadingSpinner(true);\n\n            // Get current table data and structure\n            const tableId = this.table.id;\n            const title =\n                document.querySelector(`#${tableId} caption`)?.textContent ||\n                \"Table Data\";\n\n            // Filter visible columns\n            const visibleColumns = this.columns.filter(\n                (col) => col.visible !== false\n            );\n\n            // Prepare PDF download parameters\n            const exportParams = new URLSearchParams({\n                search: this.search,\n                sortBy: this.sort,\n                order: this.order,\n                columnFilters: JSON.stringify(this.columnFilters),\n                export: \"true\",\n            });\n\n            // Fetch data for PDF\n            this.fetchDataForPdf(title, visibleColumns, exportParams);\n        } catch (error) {\n            console.error(\"Error preparing PDF download:\", error);\n            alert(\"Error preparing PDF download. Please try again.\");\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Method to fetch and render data for PDF\n    async fetchDataForPdf(title, visibleColumns, exportParams) {\n        try {\n            // Define the maximum records to download\n            const maxPdfRecords = 5000; // Adjust based on your needs\n\n            // Process data in chunks to avoid memory issues\n            let page = 1;\n            let chunkSize = 1000; // Process 1000 records at a time\n            let hasMoreData = true;\n            let totalProcessed = 0;\n            let allData = [];\n\n            while (hasMoreData && totalProcessed < maxPdfRecords) {\n                // Update pagination parameters for this chunk\n                exportParams.set(\"page\", page);\n                exportParams.set(\"perPage\", chunkSize);\n\n                try {\n                    // Fetch chunk\n                    const response = await fetch(\n                        `${this.url}?${exportParams.toString()}`,\n                        {\n                            method: \"GET\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"X-Requested-For\": \"pdf-export\",\n                            },\n                        }\n                    );\n\n                    if (!response.ok) {\n                        throw new Error(\n                            `PDF export data request failed with status: ${response.status}`\n                        );\n                    }\n\n                    const json = await response.json();\n                    const dataChunk = json[this.dataSrc] || [];\n\n                    // Check if this is the last chunk\n                    hasMoreData = dataChunk.length === chunkSize;\n                    totalProcessed += dataChunk.length;\n\n                    // Prepare data for PDF\n                    const processedChunk = dataChunk.map((row) => {\n                        const pdfRow = {};\n                        visibleColumns.forEach((column) => {\n                            let cellValue = row[column.name] || \"\";\n\n                            // Apply custom render function if it exists and is meant for PDF\n                            if (column.pdfRender) {\n                                cellValue = column.pdfRender(cellValue, row);\n                            } else if (\n                                column.render &&\n                                column.useRenderForPdf\n                            ) {\n                                // Use the render function\n                                cellValue = column.render(cellValue, row);\n                            }\n\n                            pdfRow[column.label || column.name] = cellValue;\n                        });\n                        return pdfRow;\n                    });\n\n                    allData.push(...processedChunk);\n\n                    // Move to next page\n                    page++;\n                } catch (error) {\n                    console.error(\"Error fetching data chunk for PDF:\", error);\n                    hasMoreData = false; // Stop on error\n                    throw error; // Rethrow to be caught by outer catch\n                }\n            }\n\n            // Generate PDF\n            this.generatePdf(\n                title,\n                visibleColumns,\n                allData,\n                totalProcessed,\n                maxPdfRecords\n            );\n        } catch (error) {\n            console.error(\"Error preparing PDF data:\", error);\n            alert(\"Error preparing PDF download. Please try again.\");\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // Method to generate PDF using jsPDF and autoTable\n    generatePdf(title, visibleColumns, data, totalProcessed, maxPdfRecords) {\n        try {\n            // Create a new PDF document\n            const doc = new jsPDF({\n                orientation: \"landscape\",\n                unit: \"mm\",\n                format: \"a4\",\n            });\n\n            // Set document properties\n            doc.setProperties({\n                title: title,\n                subject: \"Data Export\",\n                creator: \"DataTable Export\",\n            });\n\n            // Prepare table headers\n            const headers = visibleColumns.map((col) => col.label || col.name);\n\n            // Prepare table rows\n            const rows = data.map((row) =>\n                headers.map((header) => row[header] || \"\")\n            );\n\n            // Add title and metadata\n            const pageWidth = doc.internal.pageSize.width;\n            const pageHeight = doc.internal.pageSize.height;\n\n            doc.setFontSize(16);\n            doc.text(title, pageWidth / 2, 15, { align: \"center\" });\n\n            doc.setFontSize(10);\n            doc.text(\n                `Generated on: ${new Date().toLocaleString()}`,\n                pageWidth - 15,\n                25,\n                { align: \"right\" }\n            );\n\n            // Add filter information\n            const filterInfo = [\n                `Search: ${this.search || \"None\"}`,\n                `Sorted by: ${this.sort} (${this.order})`,\n                `Column Filters: ${\n                    Object.entries(this.columnFilters).length > 0\n                        ? Object.entries(this.columnFilters)\n                              .map(([col, val]) => `${col}: \"${val}\"`)\n                              .join(\", \")\n                        : \"None\"\n                }`,\n            ];\n\n            doc.setFontSize(9);\n            doc.text(filterInfo.join(\" | \"), 15, 35);\n\n            // Add date range if available\n            if (this.dateRangeFilter) {\n                doc.text(`Date Range: ${this.dateRangeFilter}`, 15, 42);\n            }\n\n            // Generate the table\n            autoTable(doc, {\n                startY: this.dateRangeFilter ? 50 : 42,\n                head: [headers],\n                body: rows,\n                theme: \"striped\",\n                headStyles: {\n                    fillColor: [68, 108, 247], // Blue header similar to print styling\n                    textColor: [255, 255, 255],\n                },\n                styles: {\n                    fontSize: 8,\n                    cellPadding: 2,\n                },\n                columnStyles: {\n                    // Optionally adjust column widths or styles\n                },\n            });\n\n            // Add page numbers and total records\n            const totalPages = doc.internal.getNumberOfPages();\n            for (let i = 1; i <= totalPages; i++) {\n                doc.setPage(i);\n                doc.setFontSize(8);\n                doc.text(\n                    `Page ${i} of ${totalPages} (${totalProcessed} records${\n                        totalProcessed >= maxPdfRecords ? \" - Truncated\" : \"\"\n                    })`,\n                    pageWidth / 2,\n                    pageHeight - 10,\n                    { align: \"center\" }\n                );\n            }\n\n            // Save the PDF\n            doc.save(`${title.replace(/\\s+/g, \"_\")}_export.pdf`);\n        } catch (error) {\n            console.error(\"Error generating PDF:\", error);\n            alert(\n                \"Error generating PDF. Please ensure jsPDF libraries are loaded.\"\n            );\n        } finally {\n            this.toggleLoadingSpinner(false);\n        }\n    }\n\n    // ==============================\n    // END EXPORT FUNCTIONALITY SECTION\n    // ==============================\n}\n","import DataTable from \"./datatable.js\";\n\nexport default DataTable;\n\n// Optional: global binding for browser usage\nif (typeof window !== \"undefined\") {\n  window.TailwindDataTable = DataTable;\n}\n\n// import DataTable from 'tailwind-datatable';\n"],"names":[],"mappings":"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"}